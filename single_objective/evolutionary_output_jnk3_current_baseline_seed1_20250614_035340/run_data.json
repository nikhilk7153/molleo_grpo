{
  "oracle_name": "jnk3_current",
  "mol_lm": "baseline",
  "seed": 1,
  "start_time": "20250614_035340",
  "config": {
    "population_size": 120,
    "offspring_size": 70,
    "mutation_rate": 0.0
  },
  "generations": [
    {
      "generation": 0,
      "population_size": 120,
      "statistics": {
        "mean": 0.016583333333333335,
        "max": 0.19,
        "min": 0.0,
        "std": 0.024065737516690035
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "O=C(CCn1nnc2cc(-c3noc(Cc4ccc(Cl)cc4)n3)ccc21)N1CCCC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 2,
          "smiles": "O=C1N[C@@H](c2ccccc2F)c2c1oc1ccccc1c2=O",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 3,
          "smiles": "Cc1nonc1CC(=O)N1CCC[C@H](C(=O)Nc2ccc(-c3ccn[nH]3)cc2)C1",
          "score": 0.06,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 4,
          "smiles": "CS(=O)(=O)N[C@H]1CCN(c2ccc(Cl)c(F)c2)C1=O",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 5,
          "smiles": "C[C@H]([NH2+][C@H]1CCOC1)c1ccnc(Cl)c1",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 6,
          "smiles": "CCC(C)(C)NC(=O)c1ccc(NC(=O)N[C@@H](C)[C@H]2CCCO2)cc1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 7,
          "smiles": "CSCC[C@H](NC(=O)N[C@@H]1CCCCC1(C)C)C(=O)[O-]",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 8,
          "smiles": "COc1cc(-c2noc(C3C[C@@H](C)O[C@@H](C)C3)n2)ccn1",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 9,
          "smiles": "CCS(=O)(=O)c1ccc(C(=O)Nc2cc(C)nn2-c2nc3c(Cl)cccc3s2)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 10,
          "smiles": "CCCCO[C@@H]1C[C@H](NC(=O)c2occc2Br)C1(C)C",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 11,
          "smiles": "CC(C)C(=O)Nc1nc2ccc(CCC(=O)NCc3ccccc3Cl)cc2s1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 12,
          "smiles": "NC(=O)c1cccc(CNC(=O)CSc2nc3ccccc3o2)c1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 13,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(c1ccc([N+](=O)[O-])cc1)(C3)C2",
          "score": 0.07,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 14,
          "smiles": "Cc1nn(-c2ccccc2)c(C)c1NC(=O)CN1CCc2cc(F)ccc2C1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 15,
          "smiles": "CC[NH2+][C@@H](C)[C@@H]1CCCC(C)(C)CC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 16,
          "smiles": "C/C=C/C(=O)NCC(=O)Nc1cccc(C)c1C",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 17,
          "smiles": "COc1ccc(CNC(=O)c2cc(OC)c(OC)cc2[N+](=O)[O-])cn1",
          "score": 0.05,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 18,
          "smiles": "CC(C)OCCS(=O)(=O)N1CC(N2CC[NH2+]CC2)C1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 19,
          "smiles": "COc1ccc(C[C@H](C)C[NH+](C)Cc2cn3cccnc3n2)cc1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 20,
          "smiles": "COc1ccc(CNC(=O)Nc2ccc(CC(N)=O)cc2)cc1OC",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 21,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)Nc2c(C)cccc2C)CC1)c1ccccc1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 22,
          "smiles": "Cc1nc2ccc(NC(=O)N3CCC[C@@H](C)CC3)cc2o1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 23,
          "smiles": "COc1cc(C)c(CN2CCN(C(=O)c3ccc(N4CCCCC4)c([N+](=O)[O-])c3)CC2)cc1OC",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 24,
          "smiles": "CCN(Cc1ccc(OC)cc1)C(=O)[C@H](C)Cc1ccccc1F",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 25,
          "smiles": "CCc1nsc(NCC(=O)NC(C)(C)C)n1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 26,
          "smiles": "Cc1ccc2nc(N3CCC(C(=O)NCC(C)(C)CO)CC3)nc(C)c2c1",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 27,
          "smiles": "COc1ccc(Oc2ccc(Cl)nn2)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 28,
          "smiles": "O=C(NCc1ccccc1)c1cccc(S(=O)(=O)N2CCCCCC2)c1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 29,
          "smiles": "COc1ccc([C@H](NC(=O)c2ccc3nccnc3c2)C2CCOCC2)cc1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 30,
          "smiles": "CCc1ccc(C(=O)OCC(=O)C2=c3ccccc3=[NH+]C2)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 31,
          "smiles": "Cc1ccc(C(=O)CCC(=O)NCc2ccncc2)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 32,
          "smiles": "COc1cc(-c2ccccc2)sc1C(=O)NC[C@@H](O)C(C)(C)C",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 33,
          "smiles": "C[C@@H]1COCCN1Cc1ccc(C(=O)NN)cn1",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 34,
          "smiles": "CC(C)CN1CCO[C@@H](CNC(=O)c2ccc3[nH]nnc3c2)C1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 35,
          "smiles": "CCC(=O)Nc1ccc(C)c(NC(=O)C[C@@H]2CCCO2)c1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 36,
          "smiles": "CS[C@@H](C)c1cccc(NC(=O)c2cn(C)nc2-c2ccccc2)c1",
          "score": 0.05,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 37,
          "smiles": "Cc1ccccc1C(=O)Nc1ccc2c(N3CCCC3)ncnc2c1",
          "score": 0.19,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 38,
          "smiles": "Cc1ccc(NC(=O)CN2C(=O)S/C(=C/c3c(F)cccc3Cl)C2=O)cc1",
          "score": 0.04,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 39,
          "smiles": "CCCN(C)c1nccn2c(=O)n(CC(=O)Nc3cccc(SC)c3)nc12",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 40,
          "smiles": "O=C(Nc1ccc(-c2nnc3n2CCCCC3)cc1)c1ccccc1C(F)(F)F",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 41,
          "smiles": "CC(C)c1cccc(C(C)C)c1NC(=O)CCN1C(=O)[C@H]2CC[C@@](C)(C1=O)C2(C)C",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 42,
          "smiles": "C[C@H](SCCN1C(=O)NC(C)(C)C1=O)C(=O)NC1CCCCC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 43,
          "smiles": "CC[C@@H](C)[C@H](C)[NH+](Cc1ccccc1NC(C)=O)C1CC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 44,
          "smiles": "Cc1nn(C)cc1CNC(=O)c1ccc(Cn2cc(Cl)c([N+](=O)[O-])n2)cc1",
          "score": 0.05,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 45,
          "smiles": "Cc1cccc(CN(C(=O)c2cccc(N3CCNC3=O)c2)C(C)C)c1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 46,
          "smiles": "O=C(NCCC(F)(F)F)N1CCOc2ccccc2C1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 47,
          "smiles": "COc1ccc(C(=O)N2C[C@@H](C)[NH2+]C[C@H]2C)cc1O",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 48,
          "smiles": "Cc1nn(C)cc1CN1C[C@H](CO)OC[C@@H]1C",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 49,
          "smiles": "CC(=O)Nc1ccc(NCc2ccccc2F)c(C(F)(F)F)c1",
          "score": 0.08,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 50,
          "smiles": "CCC(=O)Oc1ccc2cc(C(=O)NCCc3ccccc3)c(=O)oc2c1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 51,
          "smiles": "CCc1ccccc1NC(=O)CN(C)c1cnn(C)c(=O)c1Cl",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 52,
          "smiles": "C[C@@](O)(CNC(=O)N[C@@H](c1ccccc1)C1CCCC1)CN1CCOCC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 53,
          "smiles": "[NH3+]C[C@H](CO)Cc1cc(F)cc(Br)c1",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 54,
          "smiles": "Cc1cc(NC(=O)Nc2cccc(Cl)c2)ncc1Br",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 55,
          "smiles": "CCOC(=O)c1ccc(NS(=O)(=O)c2ccc3c(c2)N(C(C)=O)CCO3)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 56,
          "smiles": "COc1ccc(C[C@H](C)CNC(=O)Cc2c(C)noc2C)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 57,
          "smiles": "O=C(NC(=S)Nc1c(O)ccc2ccccc12)c1cccc(F)c1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 58,
          "smiles": "CCSC[C@@H](C)N(C)C(=O)NCc1ccc(C)cc1N(C)C",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 59,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](c1ccc(Cl)cc1Cl)NC(=O)N2CC",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 60,
          "smiles": "CC(=O)Nc1ccc(NC(=O)CCc2cnn(-c3ccccc3)c2)cc1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 61,
          "smiles": "COc1ccc2c(c1)C[C@@H](C(=O)Nc1ccc(C(C)=O)c(C)c1)CO2",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 62,
          "smiles": "C#CCN(CC(=O)[O-])C(=O)c1nc(CC)n[n-]1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 63,
          "smiles": "COc1cccc(/C=C2\\SC(=S)N=C2[O-])c1OCc1ccc(Cl)cc1Cl",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 64,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])c1ccc2c(c1)OCCCO2",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 65,
          "smiles": "O=C(Cc1ccc(Br)cc1)N/N=C/c1ccccc1O",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 66,
          "smiles": "COc1cc(F)c(NC(=O)C=C2CN(C(=O)OC(C)(C)C)C2)cc1F",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 67,
          "smiles": "Cc1ccc(CCC(=O)Nc2cc(S(C)(=O)=O)ccc2Cl)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 68,
          "smiles": "COc1ccc(C[NH+]2CCC(CNC(=O)c3c[nH]nc3-c3ccc(Cl)cc3)CC2)cc1",
          "score": 0.05,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 69,
          "smiles": "Fc1ccc2oc(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)cc2c1",
          "score": 0.06,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 70,
          "smiles": "Cc1ccc(-c2ncco2)cc1NC(=O)c1nc(Cl)ccc1Cl",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 71,
          "smiles": "Cc1cccc(C)c1C[NH2+]CC(C)(C)C(N)=O",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 72,
          "smiles": "C[C@H](NC(=O)CSc1nc2ccccc2c(=O)n1C[C@H]1CCCO1)c1ccc(F)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 73,
          "smiles": "O=C(Nc1ccc2c(c1)CCO2)N1CCC[C@H]1c1nc2ccccc2[nH]1",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 74,
          "smiles": "C[C@@H](Nc1ccc([N-]S(C)(=O)=O)cc1)C(=O)Nc1ccc2c(c1)OCO2",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 75,
          "smiles": "Cc1[nH+]ccn1Cc1nnc([C@@H]2CCC[NH+](Cc3cccnc3)C2)n1C",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 76,
          "smiles": "CC[C@H](OC(=O)c1cccc(C(F)(F)F)c1)C(=O)Nc1cc(C)on1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 77,
          "smiles": "CCOc1ccc(-n2c(N)c(C(=O)OC(C)(C)C)c3nc4ccccc4nc32)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 78,
          "smiles": "C[C@H](NC(=O)NCc1cccc2cccnc12)c1cnn(C)c1",
          "score": 0.04,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 79,
          "smiles": "COC[C@H](C)NC(=O)c1ccc(C(=O)OC)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 80,
          "smiles": "CCC[C@@H]1C[C@@H](Nc2cc(OC)ccc2F)CCO1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 81,
          "smiles": "CC(=O)c1ccc(N[C@H]2CC(=O)N(CC(F)(F)F)C2)c([N+](=O)[O-])c1",
          "score": 0.04,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 82,
          "smiles": "O=C(NCc1ccc(COCC(F)(F)F)cc1)c1cc(=O)c2ccccc2o1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 83,
          "smiles": "Cc1ccc(S(=O)(=O)CCC(=O)Oc2ccc(Cl)cc2Cl)cc1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 84,
          "smiles": "CCN(CC(=O)Nc1cccc(OC)c1)C(=O)c1ccc(F)cc1Br",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 85,
          "smiles": "CCC1(CNC(=O)C(=O)Nc2ccc(OC)nc2Br)CC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 86,
          "smiles": "CN(C(=O)N1CCCC1)C1CCC([NH3+])CC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 87,
          "smiles": "C[C@@H](NC(=O)N[C@H]1C[C@@H]1c1cccc(Cl)c1)c1nnc2ccccn12",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 88,
          "smiles": "COc1ccc([C@@H]2CC(=O)C3=C(C2)N[C@@H]2N=NC(O)=C2[C@H]3c2ccc(Cl)c(Cl)c2)cc1OC",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 89,
          "smiles": "COC(=O)[C@@H]1CCCN(C(=O)NC2CCC([NH+]3CCCCC3)CC2)C1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 90,
          "smiles": "O=C(C[NH+]1CCN(c2ccc(C(F)(F)F)cn2)CC1)N1CCC[C@H]1c1ccc2c(c1)OCCO2",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 91,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1c1cccc2c1OC(C)(C)C2",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 92,
          "smiles": "Cc1noc(CC[NH2+][C@@H](C)CC(=O)Nc2ccc(Br)cc2)n1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 93,
          "smiles": "Cc1ccc([C@H](C)NC(=O)N[C@H]2CC(=O)N(C3CC3)C2)cc1[N+](=O)[O-]",
          "score": 0.06,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 94,
          "smiles": "CCOC(=O)N1CCN(C(=O)COc2ccc(S(=O)(=O)N3CCCCC3)cc2)CC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 95,
          "smiles": "C[C@H]1Cc2cc([C@@H](Cl)C3(C)CCCC3)ccc2O1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 96,
          "smiles": "Cc1cccc(C[NH+]2CCC[C@@]3(CC[NH+](Cc4cnn(C(C)C)c4)C3)C2)c1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 97,
          "smiles": "C[NH+]1CCC(NC(=O)Nc2ncc(Cc3cccc(Cl)c3)s2)CC1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 98,
          "smiles": "CC[S@](=O)[C@@H]1CCCC[C@@H]1NC(=O)N[C@@H]1CCC[C@H](C(F)(F)F)C1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 99,
          "smiles": "N#CCSC1[NH+]=c2ccccc2=[NH+]1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 100,
          "smiles": "O=C(NCC1CCN(C(=O)c2ccccn2)CC1)C(=O)NC1CCCC1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 101,
          "smiles": "COc1ccc(N2CCN(C(=O)[C@@H](NC(N)=O)C(C)C)CC2)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 102,
          "smiles": "C[C@H](Cc1ccsc1)[NH+](C)Cc1cnc(N2CC[NH+](C)CC2)nc1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 103,
          "smiles": "COc1ccc(NC(=O)C[NH+]2CCCN(Cc3cccc(Cl)c3)S2(=O)=O)cc1",
          "score": 0.02,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 104,
          "smiles": "Cc1nn(C)c(C)c1NC(=O)CS[C@H]1CCCc2ccccc21",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 105,
          "smiles": "Cn1nc(C2CCC2)cc1NC(=O)N[C@H](C(N)=O)C(C)(C)C",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 106,
          "smiles": "COc1nc(N[C@@H]2C[NH+]3CCC2CC3)ccc1N",
          "score": 0.06,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 107,
          "smiles": "OCc1ccc(OCCC2OCCCO2)cc1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 108,
          "smiles": "Cc1ccc(S(=O)(=O)/N=C([O-])/C=C/c2cccs2)cc1C",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 109,
          "smiles": "Cc1cnc(C[NH+](C)CCCc2cc(-c3ccc(F)cc3)[nH]n2)o1",
          "score": 0.04,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 110,
          "smiles": "COc1ccc(S(=O)(=O)N(C)CC(=O)NC2CCCCC2)cc1C",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 111,
          "smiles": "C[C@H](Oc1ccc(Cl)c(Cl)c1)C(=O)NC[C@H]1CCC[C@@H]1O",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 112,
          "smiles": "CC1(C)CN(CCOc2ccc(S(C)(=O)=O)cc2)CC[S@@]1=O",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 113,
          "smiles": "N#CCc1ccc2[nH]ccc2n1",
          "score": 0.03,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 114,
          "smiles": "O=C(NC[C@H]1CCC[NH+](Cc2cc(O)ccc2[N+](=O)[O-])C1)c1ccccc1",
          "score": 0.05,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 115,
          "smiles": "CCC(CC)C(=O)N1CCC(NC(=O)Nc2cc(Cl)ccc2N2CCOCC2)CC1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 116,
          "smiles": "CCOC(=O)[C@@H]1CCCN(C(=O)c2oc3ccccc3c2C)C1",
          "score": 0.0,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 117,
          "smiles": "CC(=O)N[C@H](C)c1ccc(-c2csc(NC(=O)[C@@H](C)Oc3cc(C)ccc3Cl)n2)cc1",
          "score": 0.04,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 118,
          "smiles": "O=C(NCc1ccc(N2CCC(O)CC2)c(F)c1)c1ccn(-c2ccc(F)cc2)n1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 119,
          "smiles": "CC(C)n1ccc(CCNCc2cnc(-c3ccsc3)s2)n1",
          "score": 0.04,
          "is_offspring": null,
          "explanation": ""
        },
        {
          "rank": 120,
          "smiles": "Cc1cc(/C=C(\\C#N)C(=O)Nc2ccccc2)c(C)n1-c1ccc(I)cc1",
          "score": 0.01,
          "is_offspring": null,
          "explanation": ""
        }
      ],
      "total_oracle_calls": 120,
      "offspring_info": null
    },
    {
      "generation": 1,
      "population_size": 120,
      "statistics": {
        "mean": 0.03341666666666668,
        "max": 0.19,
        "min": 0.01,
        "std": 0.0326214610681714
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 2,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 9,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CC(=O)NC2=CCN3C[C@@H](C[NH2+]CC4=CC5=CC(F)=CC=C5O4)OC[C@@H]23)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.07,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 11,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1CC=CCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=NON=C1CC(=O)N1CCC[C@H](C(=O)NC2=CC=C(C3=CC=NN3)C=C2)C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 13,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 14,
          "smiles": "CC1=CC=C([C@H](C)NC(=O)N[C@H]2CC(=O)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "COC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 16,
          "smiles": "CC(C)(C)[C@H](O)CNC1=CC(C[C@H](C[NH3+])CO)=CC(Br)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "COC1=CC=C(CNC(=O)C2=CC(OC)=C(OC)C=C2[N+](=O)[O-])C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CS[C@@H](C)C1=CC=CC(NC(=O)C2=CN(C)N=C2C2=CC=CC=C2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 20,
          "smiles": "CC1=NN(C)C=C1CNC(=O)C1=CC=C(CN2C=C(Cl)C([N+](=O)[O-])=N2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 21,
          "smiles": "COc1ccc(C[NH+]2CCC(CNC(=O)c3c[nH]nc3-c3ccc(Cl)cc3)CC2)cc1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 22,
          "smiles": "O=C(NC[C@H]1CCC[NH+](CC2=CC(O)=CC=C2[N+](=O)[O-])C1)C1=CC=CC=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 23,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CCO[C@H](C)C3)=N2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=CC=CC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C[C@H](CC1=CSC=C1)[NH+](C)CC1=CN=C(N2CC[NH+]([N+](=O)[O-])CC2)N=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=C(NC(=O)CN2C(=O)S/C(=C/C3=C(F)C=CC=C3Cl)C2=O)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 27,
          "smiles": "C[C@H](NC(=O)NCC1=CC=CC2=CC=CN=C21)C1=CN(C)N=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 28,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C([N+](=O)[O-])=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 29,
          "smiles": "CC1=CN=C(C[NH+](C)CCCC2=NNC(C3=CC=C(F)C=C3)=C2)O1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 31,
          "smiles": "CC(C)N1C=CC(CCNCC2=CN=C(C3=CSC=C3)S2)=N1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 32,
          "smiles": "CC1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=C(Cl)C=CC(C)=C3)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CS[C@@H](C)C1=CC(NC(=O)C2=CN(C[C@H](C[NH3+])CO)N=C2C2=CC=CC=C2)=CC=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "COC1=NC=CC(C2=NOC(C3C=C(C)O[C@H](C)C3)=N2)=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=CC=CC=C1N[C@H]1CCN(C2=CC=C(Cl)C(F)=C2)C1=O",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1C1=C([C@H](NC(=O)C2=CC=C3N=CC=NC3=C2)C2CCOCC2)CC2=C1OC(C)(C)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC=CC=C1C(=O)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C[C@H]([NH2+][C@H]1CCOC1)C1=CC=NC(Cl)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 41,
          "smiles": "COC1=CC(C2=NOC(C3C[C@@H](C)O[C@@H](C)C3)=N2)=CC=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 42,
          "smiles": "COc1cc(C)c(CN2CCN(C(=O)c3ccc(N4CCCCC4)c([N+](=O)[O-])c3)CC2)cc1OC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 43,
          "smiles": "CC1=CC=C2N=C(N3CCC(C(=O)NCC(C)(C)CO)CC3)N=C(C)C2=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 44,
          "smiles": "C[C@@H]1COCCN1Cc1ccc(C(=O)NN)cn1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 45,
          "smiles": "[NH3+]C[C@H](CO)CC1=CC(F)=CC(Br)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 46,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CC=C2OCCCOC2=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 47,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C1=NC(Cl)=CC=C1Cl",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 48,
          "smiles": "O=C(NC1=CC=C2OCCC2=C1)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 49,
          "smiles": "N#CCC1=CC=C2NC=CC2=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 50,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=CC=C(Cl)C=C1C(=O)NC1=CC=CC([C@H](C)SC)=C1)NC(=O)N2CC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=COCC1)NC(=O)N2CC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CC=C(C2=CC(CCC[NH+](C)CC3=NC=C(C)O3)=NN2)C=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC(Cl)=NC=C1)(C3)C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=NC(N2CCC(C(=O)NCC(C)(C)CO)CC2)=NC2=C1C=C(Cl)C=C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C1=NC(Cl)=CC=C1[NH2+][C@@H](C)C1=CC=NC(Cl)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CCCCO[C@@H]1C[C@H](NC(=O)c2occc2Br)C1(C)C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 57,
          "smiles": "NC(=O)C1=CC=CC(CNC(=O)CSC2=NC3=CC=CC=C3O2)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 58,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)Nc2c(C)cccc2C)CC1)c1ccccc1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 59,
          "smiles": "COC1=CC=C([C@H](NC(=O)C2=CC=C3N=CC=NC3=C2)C2CCOCC2)C=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "COC1=C(C(=O)NC[C@@H](O)C(C)(C)C)SC(C2=CC=CC=C2)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 61,
          "smiles": "CC1=NN(C)C=C1CN1C[C@H](CO)OC[C@@H]1C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 62,
          "smiles": "CC1=CC(NC(=O)NC2=CC=CC(Cl)=C2)=NC=C1Br",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 63,
          "smiles": "CCSC[C@@H](C)N(C)C(=O)NCC1=CC=C(C)C=C1N(C)C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 64,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=CC=C(Cl)C=C1Cl)NC(=O)N2CC",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 65,
          "smiles": "COc1ccc2c(c1)C[C@@H](C(=O)Nc1ccc(C(C)=O)c(C)c1)CO2",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 66,
          "smiles": "Cc1[nH+]ccn1Cc1nnc([C@@H]2CCC[NH+](Cc3cccnc3)C2)n1C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 67,
          "smiles": "COC1=CC=C([C@@H]2CC(=O)C3=C(C2)N[C@@H]2N=NC(O)=C2[C@H]3C2=CC=C(Cl)C(Cl)=C2)C=C1OC",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 68,
          "smiles": "C[C@H]1Cc2cc([C@@H](Cl)C3(C)CCCC3)ccc2O1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 69,
          "smiles": "C[NH+]1CCC(NC(=O)Nc2ncc(Cc3cccc(Cl)c3)s2)CC1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 70,
          "smiles": "O=C(NCC1CCN(C(=O)c2ccccn2)CC1)C(=O)NC1CCCC1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 71,
          "smiles": "C[C@H](CC1=CSC=C1)[NH+](C)CC1=CN=C(N2CC[NH+](C)CC2)N=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 72,
          "smiles": "COc1ccc(NC(=O)C[NH+]2CCCN(Cc3cccc(Cl)c3)S2(=O)=O)cc1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 73,
          "smiles": "CC1=CC=C([C@H](C)NC(=O)N[C@H]2C=C(C)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "[O-]C1=CC=NC(Cl)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=NON=C1CC(=O)N1CCC[C@H](C(=O)[C@@H]2CC(=O)C3=C(C2)N[C@@H]2N=NC(O)=C2[C@H]3C2=CC=C(Cl)C(Cl)=C2)C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CCN1C(=O)N[C@H](C2=CC=C(Cl)C=C2Cl)C2=C1C=NN(C)C2=O",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CCSC[C@@H](C)N(C)C(=O)NCC1=CC=C(NC(=O)C2=CC=CC=C2C)C1N(C)C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "COC1=CC=C(CC(=O)C2=CC=C(CN3C=C(Cl)C([N+](=O)[O-])=N3)C=C2)C=N1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CN=C[NH2+]C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "COC1=NC=CC(C=CF)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "COC1=C(C(=O)NC[C@@H](O)C(C)(C)C)SC(C2=C([NH+]3CCCCC3)CC=C2)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "COC1=C[C@H](CO)OC1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1N[C@H]1CCN(C2=CC=C(Cl)C(F)=C2)C1=O",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=C1N[C@@H](c2ccccc2F)c2c1oc1ccccc1c2=O",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 85,
          "smiles": "CS(=O)(=O)N[C@H]1CCN(C2=CC=C(Cl)C(F)=C2)C1=O",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 86,
          "smiles": "CCC(C)(C)NC(=O)c1ccc(NC(=O)N[C@@H](C)[C@H]2CCCO2)cc1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 87,
          "smiles": "CSCC[C@H](NC(=O)N[C@@H]1CCCCC1(C)C)C(=O)[O-]",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 88,
          "smiles": "CC(C)C(=O)NC1=NC2=CC=C(CCC(=O)NCC3=CC=CC=C3Cl)C=C2S1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 89,
          "smiles": "Cc1nn(-c2ccccc2)c(C)c1NC(=O)CN1CCc2cc(F)ccc2C1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 90,
          "smiles": "COC1=CC=C(C[C@H](C)C[NH+](C)CC2=CN3C=CC=NC3=N2)C=C1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 91,
          "smiles": "CCC1=NSC(NCC(=O)NC(C)(C)C)=N1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 92,
          "smiles": "CCCN(C)c1nccn2c(=O)n(CC(=O)Nc3cccc(SC)c3)nc12",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 93,
          "smiles": "O=C(Nc1ccc(-c2nnc3n2CCCCC3)cc1)c1ccccc1C(F)(F)F",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 94,
          "smiles": "CC(C)c1cccc(C(C)C)c1NC(=O)CCN1C(=O)[C@H]2CC[C@@](C)(C1=O)C2(C)C",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 95,
          "smiles": "Cc1cccc(CN(C(=O)c2cccc(N3CCNC3=O)c2)C(C)C)c1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 96,
          "smiles": "COc1ccc(C(=O)N2C[C@@H](C)[NH2+]C[C@H]2C)cc1O",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 97,
          "smiles": "O=C(NC(=S)Nc1c(O)ccc2ccccc12)c1cccc(F)c1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 98,
          "smiles": "CC(=O)NC1=CC=C(NC(=O)CCC2=CN(C3=CC=CC=C3)N=C2)C=C1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 99,
          "smiles": "COC1=CC(F)=C(NC(=O)C=C2CN(C(=O)OC(C)(C)C)C2)C=C1F",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 100,
          "smiles": "C[C@@H](Nc1ccc([N-]S(C)(=O)=O)cc1)C(=O)Nc1ccc2c(c1)OCO2",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 101,
          "smiles": "CCC[C@@H]1C[C@@H](Nc2cc(OC)ccc2F)CCO1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 102,
          "smiles": "Cc1ccc(S(=O)(=O)CCC(=O)Oc2ccc(Cl)cc2Cl)cc1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 103,
          "smiles": "CCN(CC(=O)Nc1cccc(OC)c1)C(=O)c1ccc(F)cc1Br",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 104,
          "smiles": "COC(=O)[C@@H]1CCCN(C(=O)NC2CCC([NH+]3CCCCC3)CC2)C1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 105,
          "smiles": "O=C(C[NH+]1CCN(c2ccc(C(F)(F)F)cn2)CC1)N1CCC[C@H]1c1ccc2c(c1)OCCO2",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 106,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1C1=CC=CC2=C1OC(C)(C)C2",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 107,
          "smiles": "Cc1cccc(C[NH+]2CCC[C@@]3(CC[NH+](Cc4cnn(C(C)C)c4)C3)C2)c1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 108,
          "smiles": "Cc1nn(C)c(C)c1NC(=O)CS[C@H]1CCCc2ccccc21",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 109,
          "smiles": "CC1(C)CN(CCOc2ccc(S(C)(=O)=O)cc2)CC[S@@]1=O",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 110,
          "smiles": "O=C(NCc1ccc(N2CCC(O)CC2)c(F)c1)c1ccn(-c2ccc(F)cc2)n1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 111,
          "smiles": "Cc1cc(/C=C(\\C#N)C(=O)Nc2ccccc2)c(C)n1-c1ccc(I)cc1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 112,
          "smiles": "CC(=O)[C@@H]1CCCN(C(=O)NC2CCC([NH+]3CCCCC3)CC2)C1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C[NH2+]C[C@@H]1CN2CCCC[C@@H]2CO1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC(N)C[C@H]1C[NH2+]CC[C@@H]1C1=CC=CC2=C1OC(C)(C)C2",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC(=O)NC1=C(C)C(CN2C[C@H](CO)OC[C@@H]2C)=CC1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=[N+]([O-])C1=NN(CC2=CC=C(CN3C=C(Cl)C([N+](=O)[O-])=N3)C2)C=C1Cl",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC(C)(C)NC(=O)CNC1=NCC=[SH]1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C1C=C(C2=CC=C(F)C=C2)CN1C1CC1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "COC1=CC=C(CNC(=O)[C@H]2CCOC2)C=N1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CCSC[C@@H](C)N(C(=O)NCC1=CC=C(C)C=C1N(C)C)C1=CC=C(Cl)C(F)=C1",
          "score": 0.01,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 185,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 2,
      "population_size": 120,
      "statistics": {
        "mean": 0.05066666666666668,
        "max": 0.21,
        "min": 0.02,
        "std": 0.04132661235679606
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 3,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)OC3=CC=C(Cl)C=C3Cl)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(NC(=O)NC4=CC=CC(Cl)=C4)C=C3C)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 18,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CC(=O)NC2=CCN3C[C@@H](C[NH2+]CC4=CC5=CC(F)=CC=C5O4)OC[C@@H]23)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C[C@H](C(=O)NC1=CC=C2OCOC2=C1)C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "FC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.07,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 22,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1CC=CCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "O=C(NCC1CC[NH+](CC2=CC(=O)N(CC(F)(F)F)C2)CC1)C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=NON=C1CC(=O)N1CCC[C@H](C(=O)NC2=CC=C(C3=CC=NN3)C=C2)C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 25,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=C([C@H](C)NC(=O)N[C@H]2CC(=O)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "COC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 28,
          "smiles": "CC(C)(C)[C@H](O)CNC1=CC(C[C@H](C[NH3+])CO)=CC(Br)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(NC3=NC=COC3[N+](=O)[O-])C2)C([N+](=O)[O-])=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "COC1=CC=C(CNC(=O)C2=CC(OC)=C(OC)C=C2[N+](=O)[O-])C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CS[C@@H](C)C1=CC=CC(NC(=O)C2=CN(C)N=C2C2=CC=CC=C2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 33,
          "smiles": "CC1=NN(C)C=C1CNC(=O)C1=CC=C(CN2C=C(Cl)C([N+](=O)[O-])=N2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "COC1=CC=C(C[NH+]2CCC(CNC(=O)C3=CNN=C3C3=CC=C(Cl)C=C3)CC2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 35,
          "smiles": "O=C(NC[C@H]1CCC[NH+](CC2=CC(O)=CC=C2[N+](=O)[O-])C1)C1=CC=CC=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 36,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CCO[C@H](C)C3)=N2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=CC=CC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C[C@H](CC1=CSC=C1)[NH+](C)CC1=CN=C(N2CC[NH+]([N+](=O)[O-])CC2)N=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CS(=O)(=O)[N-][N+](=O)C1=C(C[NH+]2CC=CCC2)C=C(O)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "O=C1C[C@H](NC2OC=CN=C2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CC(C)N1C=C(C[NH+]2CC[C@@]3(CCC[NH+](CC4=CC(C[NH2+]C[C@@H]5CN6CCCC[C@@H]6CO5)=CC=C4)C3)C2)C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CNC1=C(C2=CC(C)=C(Br)C=N2)C=C(NC(C)=O)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=[N+]([O-])C1=CC=CC=C1C[NH+]1CC=CCC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=CC=C(NC(=O)CN2C(=O)S/C(=C/C3=C(F)C=CC=C3Cl)C2=O)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 45,
          "smiles": "C[C@H](NC(=O)NCC1=CC=CC2=CC=CN=C21)C1=CN(C)N=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 46,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C([N+](=O)[O-])=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 47,
          "smiles": "CC1=CN=C(C[NH+](C)CCCC2=NNC(C3=CC=C(F)C=C3)=C2)O1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 49,
          "smiles": "CC(C)N1C=CC(CCNCC2=CN=C(C3=CSC=C3)S2)=N1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 50,
          "smiles": "CC1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=C(Cl)C=CC(C)=C3)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CS[C@@H](C)C1=CC(NC(=O)C2=CN(C[C@H](C[NH3+])CO)N=C2C2=CC=CC=C2)=CC=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "COC1=NC=CC(C2=NOC(C3C=C(C)O[C@H](C)C3)=N2)=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=CC=CC=C1N[C@H]1CCN(C2=CC=C(Cl)C(F)=C2)C1=O",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1C1=C([C@H](NC(=O)C2=CC=C3N=CC=NC3=C2)C2CCOCC2)CC2=C1OC(C)(C)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC1=CC=CC=C1C(=O)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC1=CC=CC=C1C(=O)NNC(=O)C[NH+]1CCCN(CC2=CC=CC(Cl)=C2)S1(=O)=O",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CS[C@@H](C)C1=CC(NC(=O)C2=CN(C[C@H](C[NH3+])CO)N=C2C2=CC2=O)=CC=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=[N+]([O-])NC1=CC=C(C2=NN=C3CCCCCN32)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "COC1=CC2=C(C=C1)OC[C@H](C(=O)NCCC1=CSC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N1)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=CN=C(C[NH+](C)CCCC2=NNC(C3=C(F)C=CC=C3)=C2)O1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C=C(C)CN(C)C(=O)CC1=NC(N2CCC(C(=O)NCC(C)(C)CO)CC2)=NC2=CC=C(C)C=C21",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=[N+]([O-])C1=C(F)C=CC=C1Cl",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C[C@H]([NH2+][C@H]1CCOC1)C1=CC=NC(Cl)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 67,
          "smiles": "COC1=CC(C2=NOC(C3C[C@@H](C)O[C@@H](C)C3)=N2)=CC=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 68,
          "smiles": "COc1cc(C)c(CN2CCN(C(=O)c3ccc(N4CCCCC4)c([N+](=O)[O-])c3)CC2)cc1OC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 69,
          "smiles": "CC1=CC=C2N=C(N3CCC(C(=O)NCC(C)(C)CO)CC3)N=C(C)C2=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 70,
          "smiles": "C[C@@H]1COCCN1CC1=CC=C(C(=O)NN)C=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 71,
          "smiles": "[NH3+]C[C@H](CO)CC1=CC(F)=CC(Br)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 72,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CC=C2OCCCOC2=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 73,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C1=NC(Cl)=CC=C1Cl",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 74,
          "smiles": "O=C(NC1=CC=C2OCCC2=C1)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 75,
          "smiles": "N#CCC1=CC=C2NC=CC2=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 76,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=CC=C(Cl)C=C1C(=O)NC1=CC=CC([C@H](C)SC)=C1)NC(=O)N2CC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=COCC1)NC(=O)N2CC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC1=CC=C(C2=CC(CCC[NH+](C)CC3=NC=C(C)O3)=NN2)C=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC(Cl)=NC=C1)(C3)C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=NC(N2CCC(C(=O)NCC(C)(C)CO)CC2)=NC2=C1C=C(Cl)C=C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C1=NC(Cl)=CC=C1[NH2+][C@@H](C)C1=CC=NC(Cl)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1C=CC=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "[NH3+]C[C@H](CO)CN1C=C(C(=O)NC2=CC=CC2)C(C2=CC=CC=C2)=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "COC1=CC2=C(C=C1)OC[C@H](C(=O)NC1=CC=C(N[C@H](C)C(=O)NC3=CC=C4OCOC4=C3)C=C1)C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=[N+]([O-])C1OC=CN=C1N[C@H]1C=CCN(CC(F)(F)F)C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=C[NH+](CC2=CC=CN=C2)CC1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "COC1=C(OC)C=C([N+](=O)[O-])C(C(=O)NCO)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "COC1=C(C(=O)NC[C@@H](O)C(C)(C)C)SC(C2=CNC=C2)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CCCCO[C@@H]1C[C@H](NC(=O)c2occc2Br)C1(C)C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 90,
          "smiles": "NC(=O)C1=CC=CC(CNC(=O)CSC2=NC3=CC=CC=C3O2)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 91,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)Nc2c(C)cccc2C)CC1)c1ccccc1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 92,
          "smiles": "COC1=CC=C([C@H](NC(=O)C2=CC=C3N=CC=NC3=C2)C2CCOCC2)C=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "COC1=C(C(=O)NC[C@@H](O)C(C)(C)C)SC(C2=CC=CC=C2)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 94,
          "smiles": "CC1=NN(C)C=C1CN1C[C@H](CO)OC[C@@H]1C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 95,
          "smiles": "CC1=CC(NC(=O)NC2=CC=CC(Cl)=C2)=NC=C1Br",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 96,
          "smiles": "CCSC[C@@H](C)N(C)C(=O)NCC1=CC=C(C)C=C1N(C)C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 97,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=CC=C(Cl)C=C1Cl)NC(=O)N2CC",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 98,
          "smiles": "COC1=CC=C2OC[C@H](C(=O)NC3=CC=C(C(C)=O)C(C)=C3)CC2=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 99,
          "smiles": "CC1=[NH+]C=CN1CC1=NN=C([C@@H]2CCC[NH+](CC3=CC=CN=C3)C2)N1C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 100,
          "smiles": "COC1=CC=C([C@@H]2CC(=O)C3=C(C2)N[C@@H]2N=NC(O)=C2[C@H]3C2=CC=C(Cl)C(Cl)=C2)C=C1OC",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 101,
          "smiles": "C[C@H]1Cc2cc([C@@H](Cl)C3(C)CCCC3)ccc2O1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 102,
          "smiles": "C[NH+]1CCC(NC(=O)Nc2ncc(Cc3cccc(Cl)c3)s2)CC1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 103,
          "smiles": "O=C(NCC1CCN(C(=O)C2=CC=CC=N2)CC1)C(=O)NC1CCCC1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 104,
          "smiles": "C[C@H](CC1=CSC=C1)[NH+](C)CC1=CN=C(N2CC[NH+](C)CC2)N=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 105,
          "smiles": "COC1=CC=C(NC(=O)C[NH+]2CCCN(CC3=CC=CC(Cl)=C3)S2(=O)=O)C=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 106,
          "smiles": "CC1=CC=C([C@H](C)NC(=O)N[C@H]2C=C(C)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "[O-]C1=CC=NC(Cl)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=NON=C1CC(=O)N1CCC[C@H](C(=O)[C@@H]2CC(=O)C3=C(C2)N[C@@H]2N=NC(O)=C2[C@H]3C2=CC=C(Cl)C(Cl)=C2)C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CCN1C(=O)N[C@H](C2=CC=C(Cl)C=C2Cl)C2=C1C=NN(C)C2=O",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CCSC[C@@H](C)N(C)C(=O)NCC1=CC=C(NC(=O)C2=CC=CC=C2C)C1N(C)C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "COC1=CC=C(CC(=O)C2=CC=C(CN3C=C(Cl)C([N+](=O)[O-])=N3)C=C2)C=N1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=CN=C[NH2+]C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "COC1=NC=CC(C=CF)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "COC1=C(C(=O)NC[C@@H](O)C(C)(C)C)SC(C2=C([NH+]3CCCCC3)CC=C2)=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "COC1=C[C@H](CO)OC1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1N[C@H]1CCN(C2=CC=C(Cl)C(F)=C2)C1=O",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CCC(C2=NN(C(C)C)C=C2)=C1N(C)C",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "CCSC[C@@H](C)N(C)C(=O)NCC1=CC=C(NC(=O)C2=CC=CC=C2C)C1CC(C)(C)CO",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CONC1=CCC([N+](=O)[O-])=C1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "COC1C=C(C2=NOC(C3=CCO[C@H](C)C3)=N2)C=CC1",
          "score": 0.02,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 249,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 3,
      "population_size": 120,
      "statistics": {
        "mean": 0.07150000000000004,
        "max": 0.21,
        "min": 0.03,
        "std": 0.04719904660054056
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC=NN2)C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)OC3=CC=C(Cl)C=C3Cl)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CC2=CC=CN=C2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(NC(=O)NC4=CC=CC(Cl)=C4)C=C3C)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)C(=O)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)C(=O)C2=CCC([C@H]([NH3+])CSC[C@@H](C)CO)=C2C)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CNC1=CC(C2=CC(C)=C(Br)C=N2)=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "O=C(C=C1C=CC([N+](=O)[O-])C1)NC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)NC2=C(C)C=C(C3=CC=C(C)C=C3)C2C)CC1)C1=CC=CC=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 33,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CC(=O)NC2=CCN3C[C@@H](C[NH2+]CC4=CC5=CC(F)=CC=C5O4)OC[C@@H]23)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C[C@H](C(=O)NC1=CC=C2OCOC2=C1)C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "FC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C1=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=C(C=CF)C=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "N#CCC1=C[C@@H](C[NH2+]CC2=CC3=CC([N+](=O)[O-])=CC=C3O2)OC=N1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.07,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 42,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1CC=CCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=C(NCC1CC[NH+](CC2=CC(=O)N(CC(F)(F)F)C2)CC1)C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=NC=C(Br)C(N3CCCC3)=C2)=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "O=C(NCC1=CC=CC2=CC=CN=C21)NC1=CC=NN1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CCC([N+](=O)[O-])=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=NON=C1CC(=O)N1CCC[C@H](C(=O)NC2=CC=C(C3=CC=NN3)C=C2)C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 49,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 50,
          "smiles": "CC1=CC=C([C@H](C)NC(=O)N[C@H]2CC(=O)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "COC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 52,
          "smiles": "CC(C)(C)[C@H](O)CNC1=CC(C[C@H](C[NH3+])CO)=CC(Br)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(NC3=NC=COC3[N+](=O)[O-])C2)C([N+](=O)[O-])=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "COC1=CC=C2OC=C[C@@H](NC3=NC(OC)=C(N)C=C3)C2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC(=O)OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "COC1=CC=C(CNC(=O)C2=CC(OC)=C(OC)C=C2[N+](=O)[O-])C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CS[C@@H](C)C1=CC=CC(NC(=O)C2=CN(C)N=C2C2=CC=CC=C2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 59,
          "smiles": "CC1=NN(C)C=C1CNC(=O)C1=CC=C(CN2C=C(Cl)C([N+](=O)[O-])=N2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "COC1=CC=C(C[NH+]2CCC(CNC(=O)C3=CNN=C3C3=CC=C(Cl)C=C3)CC2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 61,
          "smiles": "O=C(NC[C@H]1CCC[NH+](CC2=CC(O)=CC=C2[N+](=O)[O-])C1)C1=CC=CC=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 62,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CCO[C@H](C)C3)=N2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=CC=CC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "C[C@H](CC1=CSC=C1)[NH+](C)CC1=CN=C(N2CC[NH+]([N+](=O)[O-])CC2)N=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CS(=O)(=O)[N-][N+](=O)C1=C(C[NH+]2CC=CCC2)C=C(O)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C1C[C@H](NC2OC=CN=C2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CC(C)N1C=C(C[NH+]2CC[C@@]3(CCC[NH+](CC4=CC(C[NH2+]C[C@@H]5CN6CCCC[C@@H]6CO5)=CC=C4)C3)C2)C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CNC1=C(C2=CC(C)=C(Br)C=N2)C=C(NC(C)=O)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=[N+]([O-])C1=CC=CC=C1C[NH+]1CC=CCC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=C2C=C(C[NH2+]C[C@@H]3CN4CC=C(C=CF)[C@@H]4CO3)OC2=CC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=CC=N2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CONC1=CC=C2N=CN=C(N3CCCC3)C2=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "COC1=CC2=C(C=C1)OC[C@H](C(=O)NCCC1=CNC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N1)C2",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=CC=C(NC(=O)CN2C(=O)S/C(=C/C3=C(F)C=CC=C3Cl)C2=O)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 75,
          "smiles": "C[C@H](NC(=O)NCC1=CC=CC2=CC=CN=C21)C1=CN(C)N=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 76,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C([N+](=O)[O-])=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 77,
          "smiles": "CC1=CN=C(C[NH+](C)CCCC2=NNC(C3=CC=C(F)C=C3)=C2)O1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 79,
          "smiles": "CC(C)N1C=CC(CCNCC2=CN=C(C3=CSC=C3)S2)=N1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 80,
          "smiles": "CC1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=C(Cl)C=CC(C)=C3)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CS[C@@H](C)C1=CC(NC(=O)C2=CN(C[C@H](C[NH3+])CO)N=C2C2=CC=CC=C2)=CC=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "COC1=NC=CC(C2=NOC(C3C=C(C)O[C@H](C)C3)=N2)=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "CC1=CC=CC=C1N[C@H]1CCN(C2=CC=C(Cl)C(F)=C2)C1=O",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1C1=C([C@H](NC(=O)C2=CC=C3N=CC=NC3=C2)C2CCOCC2)CC2=C1OC(C)(C)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=CC=CC=C1C(=O)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=CC=CC=C1C(=O)NNC(=O)C[NH+]1CCCN(CC2=CC=CC(Cl)=C2)S1(=O)=O",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CS[C@@H](C)C1=CC(NC(=O)C2=CN(C[C@H](C[NH3+])CO)N=C2C2=CC2=O)=CC=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "O=[N+]([O-])NC1=CC=C(C2=NN=C3CCCCCN32)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "COC1=CC2=C(C=C1)OC[C@H](C(=O)NCCC1=CSC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N1)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CN=C(C[NH+](C)CCCC2=NNC(C3=C(F)C=CC=C3)=C2)O1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "C=C(C)CN(C)C(=O)CC1=NC(N2CCC(C(=O)NCC(C)(C)CO)CC2)=NC2=CC=C(C)C=C21",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=[N+]([O-])C1=C(F)C=CC=C1Cl",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC1=C(O)CC=C1C(=O)C1=CN(C)N=C1C1=CC=CC=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "FC=CC1=CCN2C=CC=C[C@@H]12",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C[C@H]([NH2+][C@H]1CCOC1)C1=CC=NC(Cl)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 99,
          "smiles": "COC1=CC(C2=NOC(C3C[C@@H](C)O[C@@H](C)C3)=N2)=CC=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 100,
          "smiles": "COC1=CC(C)=C(CN2CCN(C(=O)C3=CC=C(N4CCCCC4)C([N+](=O)[O-])=C3)CC2)C=C1OC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 101,
          "smiles": "CC1=CC=C2N=C(N3CCC(C(=O)NCC(C)(C)CO)CC3)N=C(C)C2=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 102,
          "smiles": "C[C@@H]1COCCN1CC1=CC=C(C(=O)NN)C=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 103,
          "smiles": "[NH3+]C[C@H](CO)CC1=CC(F)=CC(Br)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 104,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CC=C2OCCCOC2=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 105,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C1=NC(Cl)=CC=C1Cl",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 106,
          "smiles": "O=C(NC1=CC=C2OCCC2=C1)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 107,
          "smiles": "N#CCC1=CC=C2NC=CC2=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 108,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=CC=C(Cl)C=C1C(=O)NC1=CC=CC([C@H](C)SC)=C1)NC(=O)N2CC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "C=C(C)CN(C)C(=O)CN1CC2=C(C1=O)[C@@H](C1=COCC1)NC(=O)N2CC",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC1=CC=C(C2=CC(CCC[NH+](C)CC3=NC=C(C)O3)=NN2)C=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC(Cl)=NC=C1)(C3)C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=NC(N2CCC(C(=O)NCC(C)(C)CO)CC2)=NC2=C1C=C(Cl)C=C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C1=NC(Cl)=CC=C1[NH2+][C@@H](C)C1=CC=NC(Cl)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1C=CC=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "[NH3+]C[C@H](CO)CN1C=C(C(=O)NC2=CC=CC2)C(C2=CC=CC=C2)=N1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "COC1=CC2=C(C=C1)OC[C@H](C(=O)NC1=CC=C(N[C@H](C)C(=O)NC3=CC=C4OCOC4=C3)C=C1)C2",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=[N+]([O-])C1OC=CN=C1N[C@H]1C=CCN(CC(F)(F)F)C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=C[NH+](CC2=CC=CN=C2)CC1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "COC1=C(OC)C=C([N+](=O)[O-])C(C(=O)NCO)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "COC1=C(C(=O)NC[C@@H](O)C(C)(C)C)SC(C2=CNC=C2)=C1",
          "score": 0.03,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 317,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 4,
      "population_size": 120,
      "statistics": {
        "mean": 0.09333333333333335,
        "max": 0.23,
        "min": 0.04,
        "std": 0.050601932330253514
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=CC2=C(C=C1NCC1CCOCC1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=CC(O)=C(C)CO2)C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CC1=CC2=C(C=C1C(=O)NC1=CCC([N+](=O)[O-])=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC=NN2)C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C[NH+](CC2=CC=CN=C2)C1CO",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=NOC(C4=CCO[C@H](C)C4)=N3)=N2)=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)OC3=CC=C(Cl)C=C3Cl)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CC2=CC=CN=C2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=NC=C(Br)C(NC(C)=O)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(NC(=O)NC4=CC=CC(Cl)=C4)C=C3C)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)C(=O)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC(C)(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CC1=C(Br)C=NC(C2=CC=CC=C2NCC2=CC=CC=C2F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)C(=O)C2=CCC([C@H]([NH3+])CSC[C@@H](C)CO)=C2C)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CNC1=CC(C2=CC(C)=C(Br)C=N2)=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(C=C1C=CC([N+](=O)[O-])C1)NC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)NC2=C(C)C=C(C3=CC=C(C)C=C3)C2C)CC1)C1=CC=CC=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CNC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "COC1C=C(C2=NOC(C3=CCO[C@H](C)C3)=N2)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 53,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CC(=O)NC2=CCN3C[C@@H](C[NH2+]CC4=CC5=CC(F)=CC=C5O4)OC[C@@H]23)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "C[C@H](C(=O)NC1=CC=C2OCOC2=C1)C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "FC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=C(C=CF)C=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "N#CCC1=C[C@@H](C[NH2+]CC2=CC3=CC([N+](=O)[O-])=CC=C3O2)OC=N1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(CCCC1=NNC(C2=CC=C(F)C=C2)=C1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)C3=NC=NC4=CC(C5=CCC=C5)=CC=C43)=N2)C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.07,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 65,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1CC=CCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(NCC1CC[NH+](CC2=CC(=O)N(CC(F)(F)F)C2)CC1)C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=NC=C(Br)C(N3CCCC3)=C2)=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NCC1=CC=CC2=CC=CN=C21)NC1=CC=NN1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CCC([N+](=O)[O-])=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=NON=C1CC(=O)N1CCC[C@H](C(=O)NC2=CC=C(C3=CC=NN3)C=C2)C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 72,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 73,
          "smiles": "CC1=CC=C([C@H](C)NC(=O)N[C@H]2CC(=O)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "COC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 75,
          "smiles": "CC(C)(C)[C@H](O)CNC1=CC(C[C@H](C[NH3+])CO)=CC(Br)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(NC3=NC=COC3[N+](=O)[O-])C2)C([N+](=O)[O-])=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "COC1=CC=C2OC=C[C@@H](NC3=NC(OC)=C(N)C=C3)C2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC(=O)OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(NC1=CCC([N+](=O)[O-])=C1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC(=O)N(CC(F)(F)F)C2)C=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1C1=CC2=C(C=CC([C@H](C)C(=O)NC3=CC=C4OCOC4=C3)=C2)O1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CNC1=CC=C(NC2C=CC=C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "COC1=CC=C(CNC(=O)C2=CC(OC)=C(OC)C=C2[N+](=O)[O-])C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "CS[C@@H](C)C1=CC=CC(NC(=O)C2=CN(C)N=C2C2=CC=CC=C2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 86,
          "smiles": "CC1=NN(C)C=C1CNC(=O)C1=CC=C(CN2C=C(Cl)C([N+](=O)[O-])=N2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "COC1=CC=C(C[NH+]2CCC(CNC(=O)C3=CNN=C3C3=CC=C(Cl)C=C3)CC2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 88,
          "smiles": "O=C(NC[C@H]1CCC[NH+](CC2=CC(O)=CC=C2[N+](=O)[O-])C1)C1=CC=CC=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 89,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CCO[C@H](C)C3)=N2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=CC=CC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C[C@H](CC1=CSC=C1)[NH+](C)CC1=CN=C(N2CC[NH+]([N+](=O)[O-])CC2)N=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CS(=O)(=O)[N-][N+](=O)C1=C(C[NH+]2CC=CCC2)C=C(O)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C1C[C@H](NC2OC=CN=C2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC(C)N1C=C(C[NH+]2CC[C@@]3(CCC[NH+](CC4=CC(C[NH2+]C[C@@H]5CN6CCCC[C@@H]6CO5)=CC=C4)C3)C2)C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CNC1=C(C2=CC(C)=C(Br)C=N2)C=C(NC(C)=O)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=[N+]([O-])C1=CC=CC=C1C[NH+]1CC=CCC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=C2C=C(C[NH2+]C[C@@H]3CN4CC=C(C=CF)[C@@H]4CO3)OC2=CC1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=CC=N2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CONC1=CC=C2N=CN=C(N3CCCC3)C2=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "COC1=CC2=C(C=C1)OC[C@H](C(=O)NCCC1=CNC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N1)C2",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)C2=CC(O)=CC=C2[N+](=O)[O-])=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC1=CN(CC(F)(F)F)C([C@H](C)NC(=O)N[C@H]2CC(=O)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC(=O)NC1C=C(C(F)(F)F)C(NCC2=C(C)CC=C2F)=CC1C",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=[N+]([O-])C1=CC=C(C2=NC=CO2)C=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "ClC1=NC=CC(C2=NC=NC3=CC=CC=C32)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=CC=C(NC(=O)CN2C(=O)S/C(=C/C3=C(F)C=CC=C3Cl)C2=O)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 107,
          "smiles": "C[C@H](NC(=O)NCC1=CC=CC2=CC=CN=C21)C1=CN(C)N=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 108,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C([N+](=O)[O-])=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 109,
          "smiles": "CC1=CN=C(C[NH+](C)CCCC2=NNC(C3=CC=C(F)C=C3)=C2)O1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=CC(C)=CC=C3Cl)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 111,
          "smiles": "CC(C)N1C=CC(CCNCC2=CN=C(C3=CSC=C3)S2)=N1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 112,
          "smiles": "CC1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)[C@@H](C)OC3=C(Cl)C=CC(C)=C3)=N2)C=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CS[C@@H](C)C1=CC(NC(=O)C2=CN(C[C@H](C[NH3+])CO)N=C2C2=CC=CC=C2)=CC=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "COC1=NC=CC(C2=NOC(C3C=C(C)O[C@H](C)C3)=N2)=C1",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CC=CC=C1N[C@H]1CCN(C2=CC=C(Cl)C(F)=C2)C1=O",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1C1=C([C@H](NC(=O)C2=CC=C3N=CC=NC3=C2)C2CCOCC2)CC2=C1OC(C)(C)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CC1=CC=CC=C1C(=O)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1=CC=CC=C1C(=O)NNC(=O)C[NH+]1CCCN(CC2=CC=CC(Cl)=C2)S1(=O)=O",
          "score": 0.04,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 383,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 5,
      "population_size": 120,
      "statistics": {
        "mean": 0.11391666666666671,
        "max": 0.23,
        "min": 0.05,
        "std": 0.04832693923222901
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=[N+]([O-])C1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C1=CC2=C(C=C1NCC1CCOCC1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=CC(O)=C(C)CO2)C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=CC2=C(C=C1C(=O)NC1=CCC([N+](=O)[O-])=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC=NN2)C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C[NH+](CC2=CC=CN=C2)C1CO",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=NOC(C4=CCO[C@H](C)C4)=N3)=N2)=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=C(C(=O)C2=CC=C[NH+](CC3=CC=CN=C3)C2C)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)OC3=CC=C(Cl)C=C3Cl)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CC2=CC=CN=C2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=NC=C(Br)C(NC(C)=O)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]CC3=CC=C(C4=CC=NN4)C=C3)=CC2=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "OC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)C[C@@H]([NH3+])C4=C(C)C(C5=CNN=C5C5=CC=C(Cl)C=C5)=CC4)C=C1)(C3)C2",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)SC[C@@H](C)CO)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(NC(=O)NC4=CC=CC(Cl)=C4)C=C3C)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)C(=O)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC(C)(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=C(Br)C=NC(C2=CC=CC=C2NCC2=CC=CC=C2F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC(=O)NC1=CC=C(NCCCC2=NC=CO2)C(C(F)(F)F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)(N1CCCC1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=C(NC1CCC2=CCC=C2C1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "FC=CNC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=C[SH]=C3OC(C[NH2+]CC(=O)NC4=CC=C(C5=CC=NN5)C=C4)=CC3=N2)C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)C(=O)C2=CCC([C@H]([NH3+])CSC[C@@H](C)CO)=C2C)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CNC1=CC(C2=CC(C)=C(Br)C=N2)=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C(C=C1C=CC([N+](=O)[O-])C1)NC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)NC2=C(C)C=C(C3=CC=C(C)C=C3)C2C)CC1)C1=CC=CC=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CNC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "COC1C=C(C2=NOC(C3=CCO[C@H](C)C3)=N2)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3C=CC=CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 76,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CC(=O)NC2=CCN3C[C@@H](C[NH2+]CC4=CC5=CC(F)=CC=C5O4)OC[C@@H]23)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "C[C@H](C(=O)NC1=CC=C2OCOC2=C1)C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "FC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=C(C=CF)C=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "N#CCC1=C[C@@H](C[NH2+]CC2=CC3=CC([N+](=O)[O-])=CC=C3O2)OC=N1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=C(CCCC1=NNC(C2=CC=C(F)C=C2)=C1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)C3=NC=NC4=CC(C5=CCC=C5)=CC=C43)=N2)C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=CC=C(Cl)C(O[C@H](C)N2C=CC(C3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CNC1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(NCC1=CN(CC(F)(F)C(=O)N2CCC[C@H]2C2=NC3=CC=CC=C3N2)C(=O)C1)NC1=CC=NN1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=CC(Br)=N2)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C[C@@H](CO)CSCC1=C[NH+](CC2=CC(O)=CC=C2[N+](=O)[O-])CC=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "[O-]C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.07,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 94,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1CC=CCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=C(NCC1CC[NH+](CC2=CC(=O)N(CC(F)(F)F)C2)CC1)C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=NC=C(Br)C(N3CCCC3)=C2)=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=C(NCC1=CC=CC2=CC=CN=C21)NC1=CC=NN1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CCC([N+](=O)[O-])=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=[SH]C(CNCCC=C2CN(C(=O)OC(C)(C)N3CCCC3)C2)=CN1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC1=NON=C1CC(=O)N1CCC[C@H](C(=O)NC2=CC=C(C3=CC=NN3)C=C2)C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 102,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 103,
          "smiles": "CC1=CC=C([C@H](C)NC(=O)N[C@H]2CC(=O)N(C3CC3)C2)C=C1[N+](=O)[O-]",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "COC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 105,
          "smiles": "CC(C)(C)[C@H](O)CNC1=CC(C[C@H](C[NH3+])CO)=CC(Br)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC(=O)C1=CC=C(N[C@H]2CC(=O)N(NC3=NC=COC3[N+](=O)[O-])C2)C([N+](=O)[O-])=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "COC1=CC=C2OC=C[C@@H](NC3=NC(OC)=C(N)C=C3)C2=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC(=O)OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NC1=CCC([N+](=O)[O-])=C1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC(=O)N(CC(F)(F)F)C2)C=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC(C)C[C@H]1C[NH2+]CC[C@@H]1C1=CC2=C(C=CC([C@H](C)C(=O)NC3=CC=C4OCOC4=C3)=C2)O1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CNC1=CC=C(NC2C=CC=C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=C(Br)C=NC(C2=C(N[C@H]3CC(=O)N(CC(F)(F)F)C3)C=CC(Cl)=C2)=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=CC([N+](=O)[O-])=CCO1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "FC1=CC=C(C2=CC(CC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NN2)C=C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=[N+]([O-])C1=CC=C(NCC2=CC=CC=C2F)C1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=[N+]([O-])C1=C(Cl)NC=CO1",
          "score": 0.06,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "COC1=CC=C(CNC(=O)C2=CC(OC)=C(OC)C=C2[N+](=O)[O-])C=N1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CS[C@@H](C)C1=CC=CC(NC(=O)C2=CN(C)N=C2C2=CC=CC=C2)=C1",
          "score": 0.05,
          "is_offspring": false,
          "explanation": ""
        }
      ],
      "total_oracle_calls": 452,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 6,
      "population_size": 120,
      "statistics": {
        "mean": 0.12791666666666673,
        "max": 0.23,
        "min": 0.07,
        "std": 0.04536694525998221
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=[N+]([O-])C1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "C1=CC2=C(C=C1NCC1CCOCC1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C([N+](=O)C3=C(Cl)NC=CO3)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CN=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(C2=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C2)=N1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=CC(O)=C(C)CO2)C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=CC2=C(C=C1C(=O)NC1=CCC([N+](=O)[O-])=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(F)C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC=NN2)C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C[NH+](CC2=CC=CN=C2)C1CO",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=NOC(C4=CCO[C@H](C)C4)=N3)=N2)=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC1=C(C(=O)C2=CC=C[NH+](CC3=CC=CN=C3)C2C)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=CC(C2=NC=C(CNCC[C@@H]3CN4CCCC[C@@H]4CO3)S2)=CS1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)OC3=CC=C(Cl)C=C3Cl)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CC2=CC=CN=C2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=NC=C(Br)C(NC(C)=O)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]CC3=CC=C(C4=CC=NN4)C=C3)=CC2=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "OC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)C[C@@H]([NH3+])C4=C(C)C(C5=CNN=C5C5=CC=C(Cl)C=C5)=CC4)C=C1)(C3)C2",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)SC[C@@H](C)CO)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC2=C(C=C1NCN1CCCC1)N=CN=C2N1C=NNC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(NC(=O)NC4=CC=CC(Cl)=C4)C=C3C)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)C(=O)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC(C)(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=C(Br)C=NC(C2=CC=CC=C2NCC2=CC=CC=C2F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC(=O)NC1=CC=C(NCCCC2=NC=CO2)C(C(F)(F)F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)(N1CCCC1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(NC1CCC2=CCC=C2C1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "FC=CNC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=C[SH]=C3OC(C[NH2+]CC(=O)NC4=CC=C(C5=CC=NN5)C=C4)=CC3=N2)C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=CC=C(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3C=CC(F)CO3)=CC2=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CC=C(NNC5=NC=CO5)[C@@H]4CO3)=CC2=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C[C@@H](NC(=O)[O-])C1=CC=C(C2=C[SH]=C3OC(C[NH2+]CC(=O)NC4=CC=C(C5=CC=NN5)C=C4)=CC3=N2)C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CC=C(NN5CCCC5)[C@@H]4CO3)=CC2=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)C(=O)C2=CCC([C@H]([NH3+])CSC[C@@H](C)CO)=C2C)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CNC1=CC(C2=CC(C)=C(Br)C=N2)=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=C(C=C1C=CC([N+](=O)[O-])C1)NC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)NC2=C(C)C=C(C3=CC=C(C)C=C3)C2C)CC1)C1=CC=CC=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CNC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "COC1C=C(C2=NOC(C3=CCO[C@H](C)C3)=N2)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3C=CC=CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C3=CC=CN=C3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+][NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 97,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CC(=O)NC2=CCN3C[C@@H](C[NH2+]CC4=CC5=CC(F)=CC=C5O4)OC[C@@H]23)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C[C@H](C(=O)NC1=CC=C2OCOC2=C1)C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "FC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC(C)(C)OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC=CC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1C=C(C=CF)C=CC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "N#CCC1=C[C@@H](C[NH2+]CC2=CC3=CC([N+](=O)[O-])=CC=C3O2)OC=N1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=C(CCCC1=NNC(C2=CC=C(F)C=C2)=C1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=CSC(NC(=O)C3=NC=NC4=CC(C5=CCC=C5)=CC=C43)=N2)C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=CC=C(Cl)C(O[C@H](C)N2C=CC(C3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CNC1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NCC1=CN(CC(F)(F)C(=O)N2CCC[C@H]2C2=NC3=CC=CC=C3N2)C(=O)C1)NC1=CC=NN1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=CC(Br)=N2)=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C[C@@H](CO)CSCC1=C[NH+](CC2=CC(O)=CC=C2[N+](=O)[O-])CC=C1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "[O-]C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=[N+]([O-])C1=CC2=C(C=C1)CC=C2",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "O=C1C[C@H](NC2=C([N+](=O)[O-])COC2[N+](=O)[O-])CN1CC(F)(F)F",
          "score": 0.08,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C(N1CCOCC1)C12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)[O-])C=C1)(C3)C2",
          "score": 0.07,
          "is_offspring": false,
          "explanation": ""
        },
        {
          "rank": 117,
          "smiles": "O=[N+]([O-])C1=CC=C(O)C=C1C[NH+]1CC=CCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(NCC1CC[NH+](CC2=CC(=O)N(CC(F)(F)F)C2)CC1)C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC(=O)NC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=NC=C(Br)C(N3CCCC3)=C2)=C1",
          "score": 0.07,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 517,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 7,
      "population_size": 120,
      "statistics": {
        "mean": 0.14308333333333334,
        "max": 0.24,
        "min": 0.09,
        "std": 0.04204750950479179
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3C(=O)C2=C([N+](=O)[O-])OC=CN2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=CC=CC=C1C(=O)[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=[N+]([O-])C1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C1=CC2=C(C=C1NNC1=CC=C3C(=C1)N=CN=C3N1CCCC1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C2=CCC([C@H]([NH3+])CSC[NH3+])=CC2)C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CC2=C(C=C1NCC1CCOCC1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C([N+](=O)C3=C(Cl)NC=CO3)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "C1=CN=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(C2=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C2)=N1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=CC(O)=C(C)CO2)C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC1=CC2=C(C=C1C(=O)NC1=CCC([N+](=O)[O-])=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(F)C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "O=C(C1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=C(N)C=CC(NC2=NC(C)=NO2)=N1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1C=CC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC=NN2)C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C[NH+](CC2=CC=CN=C2)C1CO",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=NOC(C4=CCO[C@H](C)C4)=N3)=N2)=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C(C1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=C(C(=O)C2=CC=C[NH+](CC3=CC=CN=C3)C2C)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C1=CC(C2=NC=C(CNCC[C@@H]3CN4CCCC[C@@H]4CO3)S2)=CS1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)OC3=CC=C(Cl)C=C3Cl)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CC2=CC=CN=C2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=NC=C(Br)C(NC(C)=O)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]CC3=CC=C(C4=CC=NN4)C=C3)=CC2=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "OC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)C[C@@H]([NH3+])C4=C(C)C(C5=CNN=C5C5=CC=C(Cl)C=C5)=CC4)C=C1)(C3)C2",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)SC[C@@H](C)CO)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CC2=C(C=C1NCN1CCCC1)N=CN=C2N1C=NNC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(NC(=O)C3=CC([N+](=O)[O-])=CC3)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=CC=C2C(=C1)N=CN=C2N1C=C(C)CC(NC2=NC(C)=NO2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(C[C@@H]4CN5CC=C(NC=CF)[C@@H]5CO4)C=C3C)=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(NC(=O)NC4=CC=CC(Cl)=C4)C=C3C)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)C(=O)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC(C)(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=C(Br)C=NC(C2=CC=CC=C2NCC2=CC=CC=C2F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC(=O)NC1=CC=C(NCCCC2=NC=CO2)C(C(F)(F)F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CC(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)(N1CCCC1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=C(NC1CCC2=CCC=C2C1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "FC=CNC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC(=O)N[C@H](C)C1=CC=C(C2=C[SH]=C3OC(C[NH2+]CC(=O)NC4=CC=C(C5=CC=NN5)C=C4)=CC3=N2)C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=CC=C(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3C=CC(F)CO3)=CC2=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CC=C(NNC5=NC=CO5)[C@@H]4CO3)=CC2=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C[C@@H](NC(=O)[O-])C1=CC=C(C2=C[SH]=C3OC(C[NH2+]CC(=O)NC4=CC=C(C5=CC=NN5)C=C4)=CC3=N2)C=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3CN4CC=C(NN5CCCC5)[C@@H]4CO3)=CC2=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C(C)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C(F)(F)C(=O)C2=CCC([C@H]([NH3+])CSC[C@@H](C)CO)=C2C)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CNC1=CC(C2=CC(C)=C(Br)C=N2)=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(C=C1C=CC([N+](=O)[O-])C1)NC1=CCN2C[C@@H](C[NH2+]CC3=CC4=CC(F)=CC=C4O3)OC[C@@H]12",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)NC2=C(C)C=C(C3=CC=C(C)C=C3)C2C)CC1)C1=CC=CC=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CNC1=CC=C(N[C@H]2CC(=O)N(CC(F)(F)F)C2)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "COC1C=C(C2=NOC(C3=CCO[C@H](C)C3)=N2)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "FC1=CC=C2OC(C[NH2+]C[C@@H]3C=CC=CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]C3=CC=CN=C3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+][NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)C([N+](=O)[O-])=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C[C@@H](N[N+](=O)[O-])C1=CC=C(C2=CSC(NC(=O)C3=NC=NC4=CC(C5=CCC=C5)=CC=C43)=N2)C=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CCC[C@@H](C(=O)N1CCN(CC(=O)NC2=C(CSC[NH3+])C=C(C3=CC=C(C)C=C3)C2C)CC1)C1=CC=CC=C1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2C=CC=C2)=N1",
          "score": 0.09,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 581,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 8,
      "population_size": 120,
      "statistics": {
        "mean": 0.15624999999999997,
        "max": 0.24,
        "min": 0.1,
        "std": 0.037014918163717
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=C2C=CC(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2=NC=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "C1=CC2=C(C=C1NN[C@@H]1C[NH+]3CCC1CC3)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3C(=O)C2=C([N+](=O)[O-])OC=CN2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=CC=CC=C1C(=O)[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "C1=NC2=CC(NO[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1=C2C=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=C([N+](=O)[O-])OC=CN3)=CC2=NC=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=[N+]([O-])C1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CC2=C(C=C1NNC1=CC=C3C(=C1)N=CN=C3N1CCCC1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C2=CCC([C@H]([NH3+])CSC[NH3+])=CC2)C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "COSC[C@@H](F)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=NC2=CC(NN3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "[NH3+]C1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CC2=C(C=C1NCC1CCOCC1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C([N+](=O)C3=C(Cl)NC=CO3)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=CN=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(C2=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C2)=N1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=CC(O)=C(C)CO2)C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=CC2=C(C=C1C(=O)NC1=CCC([N+](=O)[O-])=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(F)C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=C(C1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=C(N)C=CC(NC2=NC(C)=NO2)=N1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1C=CC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(N3CCCC3)=CC2=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC=NN2)C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C[NH+](CC2=CC=CN=C2)C1CO",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=NOC(C4=CCO[C@H](C)C4)=N3)=N2)=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(C1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CONC1=CC2=NC=NC(O[O-])=C2C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4NC(=O)C4=CCC(O)=C4C)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "C1=NC2=CC(NON3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=C(C(=O)C2=CC=C[NH+](CC3=CC=CN=C3)C2C)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CC(C2=NC=C(CNCC[C@@H]3CN4CCCC[C@@H]4CO3)S2)=CS1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1C=CC([N+](=O)[O-])C1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C[C@@H](NC(=O)[O-])C1=CC=C(C2=C[SH]=C3OC(C[NH2+]CC(=O)NC4=CCC(C5=CC=NN5)C=C4)=CC3=N2)C=C1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC(C)N1C=CC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(C)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)OC3=CC=C(Cl)C=C3Cl)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CC2=CC=CN=C2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=NC=C(Br)C(NC(C)=O)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]CC3=CC=C(C4=CC=NN4)C=C3)=CC2=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "OC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC(=O)NC12C[C@H]3C[C@@H](C1)CC(C1=CC=C([N+](=O)C[C@@H]([NH3+])C4=C(C)C(C5=CNN=C5C5=CC=C(Cl)C=C5)=CC4)C=C1)(C3)C2",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=C(Br)C=NC(C2=C(NCC3=CC=CC=C3F)C=CC(NCCC(=O)SC[C@@H](C)CO)=C2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=CC2=C(C=C1NCN1CCCC1)N=CN=C2N1C=NNC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC(=O)NC1=CC=C(NCC2=CC=CC=C2F)C(C2=CC(NC(=O)C3=CC([N+](=O)[O-])=CC3)=C(Br)C=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1=CC=C2C(=C1)N=CN=C2N1C=C(C)CC(NC2=NC(C)=NO2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(C[C@@H]4CN5CC=C(NC=CF)[C@@H]5CO4)C=C3C)=N2)=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(C[NH2+]N3CCCC3)=CC2=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=C(F)C=CC=C1C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=C([C@H]([NH3+])C[N+](=O)C2=CC([N+](=O)[O-])=CC2)CC=C1C1=CNN=C1C1=CC=C(Cl)C=C1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=CC=C(C2=CC(O)=C(C)CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CCCC1",
          "score": 0.11,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "COC1=NC=CC(C2=NOC(C3=CN=C(NC(=O)NC4=CC=CC(Cl)=C4)C=C3C)=N2)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C1C[C@H](NC2=NC=COC2[N+](=O)[O-])CN1CC(F)(F)C(=O)N1CCC[C@H]1C1=NC2=CC=CC=C2N1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC(C)(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "CC1=C(Br)C=NC(C2=CC=CC=C2NCC2=CC=CC=C2F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CC(=O)NC1=CC=C(NCCCC2=NC=CO2)C(C(F)(F)F)=C1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC(OC(=O)N1CC(=CCCNCC2=CN=C(C3=CSC=C3)S2)C1)(N1CCCC1)N1CCCC1",
          "score": 0.1,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 648,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 9,
      "population_size": 120,
      "statistics": {
        "mean": 0.1695833333333333,
        "max": 0.26,
        "min": 0.12,
        "std": 0.032465259209739195
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(C5=NC=NC6=CC(NF)=CC=C65)=CC=N4)=C3)=NO2)=CCO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=C2C=CC(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2=NC=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C1=CC2=C(C=C1NN[C@@H]1C[NH+]3CCC1CC3)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC=CC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1Cl",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3C(=O)C2=C([N+](=O)[O-])OC=CN2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC1=CC=CC=C1C(=O)[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=NC2=CC(NO[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=C2C=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=C([N+](=O)[O-])OC=CN3)=CC2=NC=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=CC(C[NH+]2C=CC=C(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)C2C)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC2=NC=NC([O-])=C2C=C1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=[N+]([O-])C1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC2=C(C=C1NNC1=CC=C3C(=C1)N=CN=C3N1CCCC1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C2=CCC([C@H]([NH3+])CSC[NH3+])=CC2)C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "COSC[C@@H](F)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=NC2=CC(NN3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "[NH3+]C1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "OC1=CC=C2C(=C1)N=CN=C2ONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=[N+]([O-])C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "[NH3+]C1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC=NC(Cl)=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=CN(C2=NC=NC3=CC(N[NH+]4CC=CCC4)=CC=C32)C=C(F)C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC2=C(C=C1NCC1CCOCC1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C([N+](=O)C3=C(Cl)NC=CO3)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CN=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(C2=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C2)=N1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "COC1=CC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=CC(O)=C(C)CO2)C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=CC2=C(C=C1C(=O)NC1=CCC([N+](=O)[O-])=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(F)C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=C(C1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=C(N)C=CC(NC2=NC(C)=NO2)=N1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1C=CC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "O=[N+]([O-])C1=CC=C2OC(N3CCCC3)=CC2=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CONC1=CC2=NC=NC([O-])=C2C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC(=O)C1=CC(N2CCCC2)=CC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=CN2C[C@@H](C[NH2+]CC3=CC4=CC(C5=CC(C6=NOCC=N6)=CC=N5)=CC=C4O3)OC[C@H]2CO1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C([C@@H]2CN4CC=C(NC=CF)[C@@H]4CO2)=NC=N3)C(F)=CC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "[O-]NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=C(C1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(C2=NC=CO2)=C1[NH+]1CC=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=C(C[NH2+]CC1=CC2=CC(F)=CC=C2O1)NC1=CC=C(C2=CC=NN2)C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C[NH+](CC2=CC=CN=C2)C1CO",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=NOC(C4=CCO[C@H](C)C4)=N3)=N2)=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(C1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CONC1=CC2=NC=NC(O[O-])=C2C=C1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4NC(=O)C4=CCC(O)=C4C)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=NC2=CC(NON3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.13,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=C(C(=O)C2=CC=C[NH+](CC3=CC=CN=C3)C2C)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=CC(C2=NC=C(CNCC[C@@H]3CN4CCCC[C@@H]4CO3)S2)=CS1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1C=CC([N+](=O)[O-])C1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C[C@@H](NC(=O)[O-])C1=CC=C(C2=C[SH]=C3OC(C[NH2+]CC(=O)NC4=CCC(C5=CC=NN5)C=C4)=CC3=N2)C=C1",
          "score": 0.12,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 706,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 10,
      "population_size": 120,
      "statistics": {
        "mean": 0.1838333333333333,
        "max": 0.29,
        "min": 0.14,
        "std": 0.029949494523651348
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(F)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(C5=NC=NC6=CC(NF)=CC=C65)=CC=N4)=C3)=NO2)=CCO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1[O-]",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=CC=CC=C1NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=C2C=CC(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2=NC=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "C1=CC2=C(C=C1NN[C@@H]1C[NH+]3CCC1CC3)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC=CC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1Cl",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "COSC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CC1=NOC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "[NH3+]CSC[C@@H](N[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3C(=O)C2=C([N+](=O)[O-])OC=CN2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=CC=CC=C1C(=O)[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C1=NC2=CC(NO[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC1=C2C=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=C([N+](=O)[O-])OC=CN3)=CC2=NC=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC1=CC(C[NH+]2C=CC=C(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)C2C)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=C(NC1=CC2=NC=NC([O-])=C2C=C1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)SC[NH3+])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CN=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=[N+]([O-])C1OC=CN=C1C1=NC=NC2=CC(NF)=CC=C21",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "O=C(NOC1=NC=NC2=CC(O)=CC=C21)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=[N+]([O-])C1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=CC2=C(C=C1NNC1=CC=C3C(=C1)N=CN=C3N1CCCC1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C2=CCC([C@H]([NH3+])CSC[NH3+])=CC2)C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "COSC[C@@H](F)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "C1=NC2=CC(NN3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "[NH3+]C1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "OC1=CC=C2C(=C1)N=CN=C2ONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=[N+]([O-])C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "[NH3+]C1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC=NC(Cl)=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC1=CN(C2=NC=NC3=CC(N[NH+]4CC=CCC4)=CC=C32)C=C(F)C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NN4CCCC4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=NOC(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC1=C([C@H]([O-])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC1=C([C@H]([NH3+])C[O-])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC=CN=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "C1=CC2=C(C=C1NCC1CCOCC1)N=CN=C2N1CCCC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=C(CNC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)C(F)=CC1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC(=O)NC1=CC=C(NCC2=C([N+](=O)C3=C(Cl)NC=CO3)CC=C2F)C(C(F)(F)F)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=CN=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(C2=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C2)=N1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "COC1=CC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "C1=NC(C2=CC=C3OC(C[NH2+]C[C@@H]4C=C5N=CN=C(N6CCCC6)C5=CO4)=CC3=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "COC1=C2C=CC(NC(=O)C[C@@H]3CN4CCCC[C@@H]4CO3)=CC2=NC=N1",
          "score": 0.15,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=CC(O)=C(C)CO2)C=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=CC2=C(C=C1C(=O)NC1=CCC([N+](=O)[O-])=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(F)C1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "ClNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.14,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 771,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 11,
      "population_size": 120,
      "statistics": {
        "mean": 0.19383333333333333,
        "max": 0.29,
        "min": 0.16,
        "std": 0.02617834134462219
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOC(N4CCCC4)=N3)=C2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(F)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "C[N+](=O)C1=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=CC=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C(O)OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOCC=N3)=C2)=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(C5=NC=NC6=CC(NF)=CC=C65)=CC=N4)=C3)=NO2)=CCO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1[O-]",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CC=CC=C1NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=NC3=CC(NF)=CC=C32)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=NC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=C(C2=NC=CO2)C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC1=C(O)CC=C1C(=O)NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC1=C2C=CC(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2=NC=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=CC2=C(C=C1NN[C@@H]1C[NH+]3CCC1CC3)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC=CC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1Cl",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "COSC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "CC1=NOC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "[NH3+]CSC[C@@H](N[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "COC1=NC=NC2=CC(NC(=O)C[C@@H]3C=CC=CO3)=CC=C21",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3C(=O)C2=C([N+](=O)[O-])OC=CN2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CC1=CC=CC=C1C(=O)[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "C1=NC2=CC(NO[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=C2C=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=C([N+](=O)[O-])OC=CN3)=CC2=NC=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC1=CC(C[NH+]2C=CC=C(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)C2C)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC1=CC2=NC=NC([O-])=C2C=C1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)SC[NH3+])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CN=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=[N+]([O-])C1OC=CN=C1C1=NC=NC2=CC(NF)=CC=C21",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=C(NOC1=NC=NC2=CC(O)=CC=C21)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=CN(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=CC(C[NH+]2C=CC=C(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)C2[N+](=O)[O-])=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=C2O1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC1=C2C=CC(NC(=O)C(=O)NC3=CC=CC=C3)=CC2=NC=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1=NOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=[N+]([O-])C1=C(CNC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C(F)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(F)=C1C(=O)N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "C1=CC2=C(C=C1NNC1=CC=C3C(=C1)N=CN=C3N1CCCC1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C2=CCC([C@H]([NH3+])CSC[NH3+])=CC2)C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "COSC[C@@H](F)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "C1=NC2=CC(NN3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "[NH3+]C1=C(NC(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C=C(C2=NC=CO2)C=C1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "OC1=CC=C2C(=C1)N=CN=C2ONC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=[N+]([O-])C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.16,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 834,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 12,
      "population_size": 120,
      "statistics": {
        "mean": 0.20441666666666666,
        "max": 0.55,
        "min": 0.17,
        "std": 0.04178907020847543
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOC(N4CCCC4)=N3)=C2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(F)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C[N+](=O)C1=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=CC=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C(O)OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOCC=N3)=C2)=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=C(NNN1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(C5=NC=NC6=CC(NF)=CC=C65)=CC=N4)=C3)=NO2)=CCO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1[O-]",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=CC=CC=C1NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=NC3=CC(NF)=CC=C32)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=NC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=C(C2=NC=CO2)C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=C(O)CC=C1C(=O)NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CN[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=C2C=CC(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2=NC=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=CC2=C(C=C1NN[C@@H]1C[NH+]3CCC1CC3)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC=CC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1Cl",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "COSC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=NOC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "[NH3+]CSC[C@@H](N[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "COC1=NC=NC2=CC(NC(=O)C[C@@H]3C=CC=CO3)=CC=C21",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=C([O-])NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=[N+]([O-])C1=C(Cl)C=C(C2=NC=NC3=CC(NF)=CC=C32)CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=C(O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1Cl",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CCCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)CO)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C(C)C([N+](=O)[O-])=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "COC1=NC=CC(C2=NOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=N2)=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1C=CCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3C(=O)C2=C([N+](=O)[O-])OC=CN2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=CC=CC=C1C(=O)[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=NC2=CC(NO[NH2+]C[C@@H]3CN4CCCC[C@@H]4CO3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=C2C=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=C([N+](=O)[O-])OC=CN3)=CC2=NC=N1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=CC(C[NH+]2C=CC=C(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)C2C)=CC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "O=C(NC1=CC2=NC=NC([O-])=C2C=C1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=C([C@H]([NH3+])CSC[C@@H](C)SC[NH3+])CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=CN=C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=[N+]([O-])C1OC=CN=C1C1=NC=NC2=CC(NF)=CC=C21",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NOC1=NC=NC2=CC(O)=CC=C21)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1=CN(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C(C)C1",
          "score": 0.17,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 894,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 13,
      "population_size": 120,
      "statistics": {
        "mean": 0.21066666666666667,
        "max": 0.55,
        "min": 0.18,
        "std": 0.04152776848755006
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "[NH3+]CSC1=C(C(=O)C2=C([N+](=O)[O-])OC=CN2)C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOC(N4CCCC4)=N3)=C2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(F)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "C[N+](=O)C1=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=CC=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C(O)OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOCC=N3)=C2)=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NNN1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=NC=NC2=CC(N[N+](=O)C3=CC=CC=C3C(=O)NC3=CC=C4C(=C3)NCC(NC3=NC=CO3)=C4N3C=CC=C3)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC=CN[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(C5=NC=NC6=CC(NF)=CC=C65)=CC=N4)=C3)=NO2)=CCO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1[O-]",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC1=CC=CC=C1NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=NC3=CC(NF)=CC=C32)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=NC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=C(C2=NC=CO2)C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=C(O)CC=C1C(=O)NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CN[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "[NH3+]C(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2C=NOCC2)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CN2CCCC[C@@H]2C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "[NH3+]C1=CC(C2=CC(C3=NC=NC4=CC(NF)=CC=C43)=CC=N2)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CC1=C(C)C(C(=O)NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=C2C=CC(C(=O)NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2=NC=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CC2=C(C=C1NN[C@@H]1C[NH+]3CCC1CC3)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC=CC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1Cl",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "COSC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(C)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=NOC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "[NH3+]CSC[C@@H](N[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "COC1=NC=NC2=CC(NC(=O)C[C@@H]3C=CC=CO3)=CC=C21",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C([O-])NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=[N+]([O-])C1=C(Cl)C=C(C2=NC=NC3=CC(NF)=CC=C32)CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1Cl",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CCCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1CC=CC=C1C(=O)NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 950,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 14,
      "population_size": 120,
      "statistics": {
        "mean": 0.2191666666666667,
        "max": 0.57,
        "min": 0.18,
        "std": 0.052386119874977904
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=C(C)C(C(=O)C2=NC=NC3=CC(NC(=O)C4=CCC(O)=C4C(=O)C4=C([N+](=O)[O-])OC=CN4)=CC=C32)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC=CC=C1F",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "[NH3+]CSC1=C(C(=O)C2=C([N+](=O)[O-])OC=CN2)C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=NC=CC(C5=NC=NC6=CC(NN7CCCC7)=CC=C65)=C4)=C3)=NO2)=CCO1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "COC1=C2C=CC(NC3=CC=C(C)C=C3)=CC2=NC=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOC(N4CCCC4)=N3)=C2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(F)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C[N+](=O)C1=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=CC=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C(O)OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOCC=N3)=C2)=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(NNN1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=NC=NC2=CC(N[N+](=O)C3=CC=CC=C3C(=O)NC3=CC=C4C(=C3)NCC(NC3=NC=CO3)=C4N3C=CC=C3)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC=CN[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C[N+](=O)SC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(NCl)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(C5=NC=NC6=CC(NF)=CC=C65)=CC=N4)=C3)=NO2)=CCO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1[O-]",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=CC=CC=C1NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=NC3=CC(NF)=CC=C32)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=NC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=C(C2=NC=CO2)C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC1=C(O)CC=C1C(=O)NC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CN[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "[NH3+]C(=O)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2C=NOCC2)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CN2CCCC[C@@H]2C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "[NH3+]C1=CC(C2=CC(C3=NC=NC4=CC(NF)=CC=C43)=CC=N2)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1=C(C)C(C(=O)NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NC(=O)NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=NC(Cl)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)=N1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=C([NH+]2CC=CCC2)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "COSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC=C5OC(C[NH2+]C[C@@H]6CN7CCCC[C@@H]7CO6)=CC5=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "[NH3+]CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C[C@@H](CO)CSC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1C=CCCC1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "COC1C=C(NC(=O)C(=O)NC2=CC=C3C(=C2)N=CN=C3C2=CC(Cl)=NC=C2)C(C)C=C1N[C@H]1CC(=O)N(CC(F)(F)F)C1",
          "score": 0.18,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1005,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 15,
      "population_size": 120,
      "statistics": {
        "mean": 0.2300833333333334,
        "max": 0.57,
        "min": 0.19,
        "std": 0.06031163283774993
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=C(C)C(C(=O)C2=NC=NC3=CC(NC(=O)C4=CCC(O)=C4C(=O)C4=C([N+](=O)[O-])OC=CN4)=CC=C32)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC=CC=C1F",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=CC=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "[NH3+]CSC1=C(C(=O)C2=C([N+](=O)[O-])OC=CN2)C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=NC=CC(C5=NC=NC6=CC(NN7CCCC7)=CC=C65)=C4)=C3)=NO2)=CCO1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "COC1=C2C=CC(NC3=CC=C(C)C=C3)=CC2=NC=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1C1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOC(N4CCCC4)=N3)=C2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(F)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C[N+](=O)C1=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=CC=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C(O)OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOCC=N3)=C2)=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=C(NNN1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=NC=NC2=CC(N[N+](=O)C3=CC=CC=C3C(=O)NC3=CC=C4C(=C3)NCC(NC3=NC=CO3)=C4N3C=CC=C3)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC=CN[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C[N+](=O)SC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(NCl)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CC2=C(C=C1NC1=CN3CCCC[C@@H]3C1)N=CN=C2N1C=NNC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "[O-]NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=NC=NC3=CC(NF)=CC=C32)=NC=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C[C@@H](CO)CSC[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C1=CC=C([N+](=O)[O-])C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CNC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "C[C@@H]([NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(C5=NC=NC6=CC(NF)=CC=C65)=CC=N4)=C3)=NO2)=CCO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=NC=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CNC(=O)NC1=CC(C2=NC=NC3=CC(NF)=CC=C32)=CC1[O-]",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=CC=CC=C1NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=NC3=CC(NF)=CC=C32)=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=NC(C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NO1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(Cl)=C(C2=NC=CO2)C=C1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.19,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1050,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 16,
      "population_size": 120,
      "statistics": {
        "mean": 0.24541666666666676,
        "max": 0.57,
        "min": 0.2,
        "std": 0.07166933134581036
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1=CCCC1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)[N+](=O)[O-]",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CCNC=C1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC1=C(C)C(C(=O)C2=NC=NC3=CC(NC(=O)C4=CCC(O)=C4C(=O)C4=C([N+](=O)[O-])OC=CN4)=CC=C32)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC=CC=C1F",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=CC=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "[NH3+]CSC1=C(C(=O)C2=C([N+](=O)[O-])OC=CN2)C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=NC=CC(C5=NC=NC6=CC(NN7CCCC7)=CC=C65)=C4)=C3)=NO2)=CCO1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "COC1=C2C=CC(NC3=CC=C(C)C=C3)=CC2=NC=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1C1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "C1=CC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=NC=NC(C(=O)[N+](=O)[O-])=C2C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOC(N4CCCC4)=N3)=C2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(F)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C(=O)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "C[N+](=O)C1=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=CC=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C(O)OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOCC=N3)=C2)=C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "O=C(NNN1CCCC1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=NC=NC2=CC(N[N+](=O)C3=CC=CC=C3C(=O)NC3=CC=C4C(=C3)NCC(NC3=NC=CO3)=C4N3C=CC=C3)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC=CN[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CCCO1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "C[N+](=O)SC(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "NC1=CC=C(N[C@@H]2C[NH+]3CCC2CC3)N=C1OC1=NC=NC2=CC(NCl)=CC=C21",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C1=CC2=C(C=C1NC1=CN3CCCC[C@@H]3C1)N=CN=C2N1C=NNC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1100,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 17,
      "population_size": 120,
      "statistics": {
        "mean": 0.25300000000000006,
        "max": 0.57,
        "min": 0.2,
        "std": 0.07570336848516056
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC3=NC=NC(O)=C3C=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC4=NC=NC([O-])=C4C=C3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CCCC1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)[N+](=O)[O-]",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CCNC=C1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CNC(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=C(C)C(C(=O)C2=NC=NC3=CC(NC(=O)C4=CCC(O)=C4C(=O)C4=C([N+](=O)[O-])OC=CN4)=CC=C32)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC=CC=C1F",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC1=CC=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC(NC2=CC3=C(C=C2)C(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=NC=N3)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "[NH3+]CSC1=C(C(=O)C2=C([N+](=O)[O-])OC=CN2)C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=NC=CC(C5=NC=NC6=CC(NN7CCCC7)=CC=C65)=C4)=C3)=NO2)=CCO1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "COC1=C2C=CC(NC3=CC=C(C)C=C3)=CC2=NC=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1C1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=CC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=NC=NC(C(=O)[N+](=O)[O-])=C2C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "FNC1=CC=C2C(=C1)N=CN=C2C1=CC=NC(C2=NC=CC(C3=NOC(N4CCCC4)=N3)=C2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(C(=O)C2=CCC=C2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=NC=CC(C2=NC=CC=N2)=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=NC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1[NH+]1CC=CCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)[N+](=O)[O-]",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CN1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CONC1=CC=C2C(=C1)N=CN=C2OC1=NC(N[C@@H]2C[NH+]3CCC2CC3)=CC=C1N",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CCC([N+](=O)[O-])=C4C)=CC=C32)C=C(C)C1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(C[C@@H]1CN2CCCC[C@@H]2CO1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])CC=CN1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=NC=COC1",
          "score": 0.2,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1160,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 18,
      "population_size": 120,
      "statistics": {
        "mean": 0.26275000000000004,
        "max": 0.57,
        "min": 0.21,
        "std": 0.07849588630410301
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C(O)CC5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC3=NC=NC(O)=C3C=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC4=NC=NC([O-])=C4C=C3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=CC=CC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=CN(C2=NC=NC3=CC(NC4=NC=CO4)=CC=C32)C=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CN=C(NC2=CC=CC=C2)C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "O=C(NC1=CCCC1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)[N+](=O)[O-]",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CCNC=C1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "C1=CNC(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(Cl)=CC=C43)=C2)O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=C(C)C(C(=O)C2=NC=NC3=CC(NC(=O)C4=CCC(O)=C4C(=O)C4=C([N+](=O)[O-])OC=CN4)=CC=C32)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC=CC=C1F",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=CC=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=CC(NC2=CC3=C(C=C2)C(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=NC=N3)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C([NH3+])CC(NC2=NC(C)=NO2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=[N+]([O-])C1=CC2=C(C=C1)C(NC1=CC=C3C(=C1)N=CN=C3N1CCCC1)=NC=N2",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC(=O)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[N+](=O)[O-])OCN=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C1=CC2=C(C=CC(NC3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=C2)OC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NN1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "[NH3+]CSC1=C(C(=O)C2=C([N+](=O)[O-])OC=CN2)C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=NC=CC(C5=NC=NC6=CC(NN7CCCC7)=CC=C65)=C4)=C3)=NO2)=CCO1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "COC1=C2C=CC(NC3=CC=C(C)C=C3)=CC2=NC=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1C1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=CC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=NC=NC(C(=O)[N+](=O)[O-])=C2C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(NN2CCCC2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=C(O)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC(N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=C3)C=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C(NC1=CC=C2C(=C1)NCC(NC1=NC=CO1)=C2N1C=CC=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=[N+]([O-])C1OC=CN=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "CC1=CC=C(C2=NC=CO2)C=C1NC(=O)NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CSC[C@@H](NC(C)=O)C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2C1=CC(Cl)=NC=C1)NC1=CC(C2=NC=CO2)=CC=C1[C@@H]1C[NH+]2CCC1CC2",
          "score": 0.21,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1222,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 19,
      "population_size": 120,
      "statistics": {
        "mean": 0.28300000000000003,
        "max": 0.58,
        "min": 0.22,
        "std": 0.09600000000000002
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "[O-]NC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=C(NC1=CCC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=C1)NN1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C(O)CC5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC3=NC=NC(O)=C3C=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC4=NC=NC([O-])=C4C=C3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=CC=CC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC1=C(C(=O)NC(=O)NC2=C(NC3=CC4=C(C=C3)C(N3C=NNC3)=CC=N4)OCC2)C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[N+](=O)[O-])C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "[O-]C1=NC=NC2=CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=CN(C2=NC=NC3=CC(NC4=NC=CO4)=CC=C32)C=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CN=C(NC2=CC=CC=C2)C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NC1=CCCC1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)[N+](=O)[O-]",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CCNC=C1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=CNC(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(Cl)=CC=C43)=C2)O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=C(C)C(C(=O)C2=NC=NC3=CC(NC(=O)C4=CCC(O)=C4C(=O)C4=C([N+](=O)[O-])OC=CN4)=CC=C32)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC=CC=C1F",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=CC=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C1=CC(NC2=CC3=C(C=C2)C(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=NC=N3)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C([NH3+])CC(NC2=NC(C)=NO2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=[N+]([O-])C1=CC2=C(C=C1)C(NC1=CC=C3C(=C1)N=CN=C3N1CCCC1)=NC=N2",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC(=O)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[N+](=O)[O-])OCN=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CC2=C(C=CC(NC3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=C2)OC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NN1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=CC2=C(C=C1NC1=CC(N3CCCC3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1)NC1=CCC(O)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(O)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC(=O)N[C@H](CSC[NH3+])C1=CCC(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=NOC(C3=CCO[C@H](C)C3)=N2)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NNC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=CC=C2C(=C1)N=CN=C2NC(=O)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C(O)CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "[NH3+]CSC1=C(C(=O)C2=C([N+](=O)[O-])OC=CN2)C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=NC=CC(C5=NC=NC6=CC(NN7CCCC7)=CC=C65)=C4)=C3)=NO2)=CCO1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "COC1=C2C=CC(NC3=CC=C(C)C=C3)=CC2=NC=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(O)=C1C(=O)[N+](=O)[O-]",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(N1C=NNC1)=NC=N2",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1274,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 20,
      "population_size": 120,
      "statistics": {
        "mean": 0.30216666666666675,
        "max": 0.6,
        "min": 0.22,
        "std": 0.10733268633345368
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=C(NC(=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)C2=C(C=C(Cl)C=C2)N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "[O-]NC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=[N+]([O-])C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=C(NC1=CCC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=C1)NN1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C(O)CC5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3C(=O)[N+](=O)[O-])=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC3=NC=NC(O)=C3C=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC4=NC=NC([O-])=C4C=C3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=CC=CC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=C(C(=O)NC(=O)NC2=C(NC3=CC4=C(C=C3)C(N3C=NNC3)=CC=N4)OCC2)C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[N+](=O)[O-])C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "[O-]C1=NC=NC2=CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CN(C2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4C=NNC4)=CC3)=NC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C1=CN(C2=NC=NC3=CC(NC4=NC=CO4)=CC=C32)C=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CN=C(NC2=CC=CC=C2)C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "COC1=NC=NC2=CC(NC3=CC=C(C4=CC=CC=C4)C=C3)=CC=C21",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(NC1=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=[N+]([O-])C1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1N1CCCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "O=C(NC1=CCCC1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)[N+](=O)[O-]",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CCNC=C1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C1=CNC(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(Cl)=CC=C43)=C2)O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C2=CC=CC=C2C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC1=C([C@H]([NH3+])C(=O)NCC2=CCCC2)CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=CC=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC1=C(C)C(C(=O)C2=NC=NC3=CC(NC(=O)C4=CCC(O)=C4C(=O)C4=C([N+](=O)[O-])OC=CN4)=CC=C32)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC=CC=C1F",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=CC=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)C=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=CC(NC2=CC3=C(C=C2)C(NC2=CC=C4C(=C2)N=CN=C4N2CCCC2)=NC=N3)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=CC=CC=C1C(=O)NC1=CC=C2C(=C1)N=CN=C2N1C=C([NH3+])CC(NC2=NC(C)=NO2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=[N+]([O-])C1=CC2=C(C=C1)C(NC1=CC=C3C(=C1)N=CN=C3N1CCCC1)=NC=N2",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC(=O)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[N+](=O)[O-])OCN=N1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC2=C(C=CC(NC3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=C2)OC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NN1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C1=CC2=C(C=C1NC1=CC(N3CCCC3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NNC1=CC(C2=NOCC=N2)=CC=N1)NC1=CCC(O)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=[N+]([O-])C1=CCC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=COC(NC2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=N1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=NC(C)=NO2)C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1=CC=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C=C1",
          "score": 0.22,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1330,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 21,
      "population_size": 120,
      "statistics": {
        "mean": 0.3325833333333333,
        "max": 0.6,
        "min": 0.23,
        "std": 0.11926508173904976
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "FC1=CC=CC=C1NC1=NC=NC2=CC(NC3=CCC(C4=CC(N5C=CC=C5)=CC=N4)=C3)=CC=C21",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "FNC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=C(NC(=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)C2=C(C=C(Cl)C=C2)N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=NC4=C3C=CC(NC(=O)C3=CC=C(O)CC3)=C4)=CC=C21",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC(NC5=CC(C6=NOC(N7CCCC7)=N6)=CC=N5)=CC4)=C3)=NO2)=CCO1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H]([N+](=O)[O-])C2)=N1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=NC=CO2)=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC(N3CCCC3)=N2)=CC=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "[O-]NC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=[N+]([O-])C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC1=CCC(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)=C1)C1=CC=CC=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=C(NC1=CCC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=C1)NN1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=C(F)C=CC=C5)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C(O)CC5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3C(=O)[N+](=O)[O-])=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC3=NC=NC(O)=C3C=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC4=NC=NC([O-])=C4C=C3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=CC=CC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC1=C(C(=O)NC(=O)NC2=C(NC3=CC4=C(C=C3)C(N3C=NNC3)=CC=N4)OCC2)C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[N+](=O)[O-])C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "[O-]C1=NC=NC2=CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "C1=CN(C2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4C=NNC4)=CC3)=NC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C1=CN(C2=NC=NC3=CC(NC4=NC=CO4)=CC=C32)C=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CN=C(NC2=CC=CC=C2)C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "COC1=NC=NC2=CC(NC3=CC=C(C4=CC=CC=C4)C=C3)=CC=C21",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(NC1=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "O=[N+]([O-])C1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1N1CCCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CN=C(NN[O-])C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3NC2=NC=CO2)C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=C([O-])NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CN1C=C2CC(NC(=O)C3=CCNC4=C3C=CC(NC3=CC=CC=C3F)=C4)CCC2=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CC(N2C=CC=C2)=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3C=NNC3)=CC2)=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "O=C(NC1=CCCC1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)[N+](=O)[O-]",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CCNC=C1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "C1=CNC(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(Cl)=CC=C43)=C2)O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([O-])C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=NN(C)C=C1CNC(=O)[C@@H]([NH3+])C1=C(C)C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC([N+](=O)[O-])=CC1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.23,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1389,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 22,
      "population_size": 120,
      "statistics": {
        "mean": 0.3431666666666667,
        "max": 0.6,
        "min": 0.24,
        "std": 0.11980528183496567
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "FC1=CC=CC=C1NC1=NC=NC2=CC(NC3=CCC(C4=CC(N5C=CC=C5)=CC=N4)=C3)=CC=C21",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "FNC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=C(NC(=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)C2=C(C=C(Cl)C=C2)N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=NC4=C3C=CC(NC(=O)C3=CC=C(O)CC3)=C4)=CC=C21",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC(NC5=CC(C6=NOC(N7CCCC7)=N6)=CC=N5)=CC4)=C3)=NO2)=CCO1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H]([N+](=O)[O-])C2)=N1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=NC=CO2)=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC(N3CCCC3)=N2)=CC=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3OC(C4=CCCCN4)=CC3=C2)C=CC=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=C(NC1=CC(N[N+](=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)=CC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=[N+](NC1=CC2=NC=NC([O-])=C2C=C1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "[O-]NC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=[N+]([O-])C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "O=C(NC1=CCC(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)=C1)C1=CC=CC=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(NC1=CCC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=C1)NN1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=C(F)C=CC=C5)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "FC1=CC=CC=C1NC1=C(N2C=CC=C2)C2=C(C=C(NC3=NC=CO3)C=C2)N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C(O)CC5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3C(=O)[N+](=O)[O-])=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NN2CCCC2)C=CC=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC3=NC=NC(O)=C3C=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC4=NC=NC([O-])=C4C=C3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=CC=CC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=C(C(=O)NC(=O)NC2=C(NC3=CC4=C(C=C3)C(N3C=NNC3)=CC=N4)OCC2)C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[N+](=O)[O-])C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "[O-]C1=NC=NC2=CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "C1=CN(C2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4C=NNC4)=CC3)=NC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)N5CCCC5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "[O-]C1=NC=NC2=CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5NC4=CNN=C4)=NC3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CN(C2=NC=NC3=CC(NC4=NC=CO4)=CC=C32)C=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CN=C(NC2=CC=CC=C2)C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "COC1=NC=NC2=CC(NC3=CC=C(C4=CC=CC=C4)C=C3)=CC=C21",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=C(NC1=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=[N+]([O-])C1=CN(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=C1N1CCCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CN=C(NN[O-])C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3NC2=NC=CO2)C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3C2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=C([O-])NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CN1C=C2CC(NC(=O)C3=CCNC4=C3C=CC(NC3=CC=CC=C3F)=C4)CCC2=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "C1=CC(N2C=CC=C2)=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3C=NNC3)=CC2)=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1C=CCC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2C1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1C(C(=O)NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC=C[NH+]1CC1=CC2=CC([N+](=O)[O-])=CC=C2O1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC2=C(C=C1NC1=CC=C3OC(C[NH2+]C[C@@H]4CN5CCCC[C@@H]5CO4)=CC3=C1)N=CN=C2N1C=NNC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)NC=CO1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "O=[N+]([O-])C1=C(C2=NC=NC3=CC(NC4=C([N+](=O)[O-])OC=CN4)=CC=C32)C=CC=C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C(C1=CC(N2CCCC2)=CC1)C1=NC=NC2=CC(NNC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CN(C2=NC=NC3=CC(NC(=O)C4=CC=CC=C4C)=CC=C32)C=C(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=CONC(NC2=CC=C3C(=C2)N=CN=C3N2C=NNC2)=N1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CCCC1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)[N+](=O)[O-]",
          "score": 0.24,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1451,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 23,
      "population_size": 120,
      "statistics": {
        "mean": 0.37066666666666664,
        "max": 0.65,
        "min": 0.25,
        "std": 0.12233651222027796
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "FC1=CC=CC=C1NC1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C1=NC(NC2=CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NNC1=NC=NC2=CC(NC3=C(F)C=CC=C3)=CC=C21)C1=CC=CC=C1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "FC1=CC=CC=C1NC1=NC=NC2=CC(NC3=CCC(C4=CC(N5C=CC=C5)=CC=N4)=C3)=CC=C21",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "FNC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=C(N[N+](=O)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21)C1=CC=CC=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC(C3=NOC([O-])=N3)=CC=N2)=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=C(NC(=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)C2=C(C=C(Cl)C=C2)N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=NC4=C3C=CC(NC(=O)C3=CC=C(O)CC3)=C4)=CC=C21",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC(NC5=CC(C6=NOC(N7CCCC7)=N6)=CC=N5)=CC4)=C3)=NO2)=CCO1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H]([N+](=O)[O-])C2)=N1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=NC=CO2)=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC(N3CCCC3)=N2)=CC=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3OC(C4=CCCCN4)=CC3=C2)C=CC=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(NC1=CC(N[N+](=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)=CC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=[N+](NC1=CC2=NC=NC([O-])=C2C=C1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "[O-]NC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=[N+]([O-])C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NC1=CCC(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)=C1)C1=CC=CC=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=[N+]([O-])C1=CC=C(C2=CC(NC3=NC=NC4=CC(Cl)=CC=C43)=NC=C2)N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=C(NC1=CCC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=C1)NN1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=C(F)C=CC=C5)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "FC1=CC=CC=C1NC1=C(N2C=CC=C2)C2=C(C=C(NC3=NC=CO3)C=C2)N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C(O)CC5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC(N6CCCC6)=CC=N5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3C(=O)[N+](=O)[O-])=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NN2CCCC2)C=CC=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=CC(N2C=CC=C2)=CC(C2=CC(NC3=CC4=C(C=C3)C(N3C=NNC3)=CC=N4)=CC2)=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "O=C(NNC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=CC=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=[N+]([O-])NC1=CC=C2C(=C1)N=CN=C2C1=CC(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=NC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[O-])OC=CN1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=CC=C5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CO3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=[N+]([O-])C1=C(NC2=CC3=NC=NC(O)=C3C=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=[N+]([O-])C1=C(C2=CCOC(NC3=CC4=NC=NC([O-])=C4C=C3)=C2)NC=CO1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=CC=CC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=C(C(=O)NC(=O)NC2=C(NC3=CC4=C(C=C3)C(N3C=NNC3)=CC=N4)OCC2)C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=C(C1=CCOC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1)C1=C([N+](=O)[N+](=O)[O-])C=CC=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "[O-]C1=NC=NC2=CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "C1=CN(C2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4C=NNC4)=CC3)=NC=C2)C=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H](C)C2)=N1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)N5CCCC5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "[O-]C1=NC=NC2=CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5NC4=CNN=C4)=NC3)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3NC2=CNN=C2)=N1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "C1=CC=C2CC(NC3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC3)CCC2=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "O=C(NNC1=NC=NC2=CC(NC3=C(F)C=CC=C3)=CC=C21)NN1CCCC1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C(NC1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "OC1=CCC(C2=C(C3=CCOC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)NC=CO2)=CC1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C[C@@H]1CC(C=CC2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CCO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)SCNNC1=CC=C2C(=C1)N=CN=C2C1=NC=CO1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C1=NC2=CC(NC3=CCC(N4CCCC4)=C3)=CC=C2C(N2CCCC2)=N1",
          "score": 0.25,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1515,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 24,
      "population_size": 120,
      "statistics": {
        "mean": 0.40474999999999994,
        "max": 0.69,
        "min": 0.26,
        "std": 0.12479958934227306
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CC1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(NC2=NC=CO2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "FC1=CC=CC=C1NC1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "OC1=CC=C(C2=CC=CC=C2NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)CC1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "FC1=C(NC2=CC=C3CC(NNC4=CC(C5=NOCC=N5)=CC=N4)CCC3=C2)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "C1=NC(NC2=CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NNC1=NC=NC2=CC(NC3=C(F)C=CC=C3)=CC=C21)C1=CC=CC=C1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "FC1=CC=CC=C1NC1=NC=NC2=CC(NC3=CCC(C4=CC(N5C=CC=C5)=CC=N4)=C3)=CC=C21",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "FNC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NC4=CCC(C5=CC(N6C=CC=C6)=CC=N5)=C4)=CC=C32)C=CC=C1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "O=C(N[N+](=O)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21)C1=CC=CC=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC(C3=NOC([O-])=N3)=CC=N2)=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC(C4=NOC(C5=CCO[C@H](Cl)C5)=N4)=CC=N3)=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=C(NC(=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)C2=C(C=C(Cl)C=C2)N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=NC4=C3C=CC(NC(=O)C3=CC=C(O)CC3)=C4)=CC=C21",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC(NC5=CC(C6=NOC(N7CCCC7)=N6)=CC=N5)=CC4)=C3)=NO2)=CCO1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H]([N+](=O)[O-])C2)=N1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=NC=CO2)=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC(N3CCCC3)=N2)=CC=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3OC(C4=CCCCN4)=CC3=C2)C=CC=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(NC1=CC(N[N+](=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)=CC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=[N+](NC1=CC2=NC=NC([O-])=C2C=C1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "[O-]C1=NC(C2=CC=NC(NNC3=CNN=C3)=C2)=NO1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "[O-]NC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "O=[N+]([O-])C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=CCC(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)=C1)C1=CC=CC=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "O=[N+]([O-])C1=CC=C(C2=CC(NC3=NC=NC4=CC(Cl)=CC=C43)=NC=C2)N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "FNC1=CC(NC2=NC=CC(N3CCCC3)=C2)=CC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "[O-]C1=NC(NC2=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2)=NO1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=C(NC1=CCC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=C1)NN1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=C(F)C=CC=C5)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "FC1=CC=CC=C1NC1=C(N2C=CC=C2)C2=C(C=C(NC3=NC=CO3)C=C2)N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC(=O)C1=C2C=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC2=NC=N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=[N+](NC1=CCC(NN2CCCC2)=C1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=CC=C(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C(O)CC5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=NC4=CC(NC(=O)C5=CC(N6CCCC6)=CC=N5)=CC=C43)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CN(C2=CC=NC(C3=CC(C4=CC(NNC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC3)=C2)C=C1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=[N+](NN1CCCC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(NC1=CC=CC=C1)C(=O)NC1CCC2=C(C1)N=C1C=C(NC3=CC=CC=C3F)C=CC1=C2N1CCCC1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "[NH3+]CC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC2=C(C=C1)OCC(N1CCCC1)=C2",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3C(=O)[N+](=O)[O-])=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NN2CCCC2)C=CC=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC(N2C=CC=C2)=CC(C2=CC(NC3=CC4=C(C=C3)C(N3C=NNC3)=CC=N4)=CC2)=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=C(NNC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1)C1=C([N+](=O)[O-])C=CC=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=CC=C(C(=O)NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3OC(C4=CCCC4)=CC3=C2)C=CC=C1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H](F)C2)=N1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(C1=NC=NC2=CC(NC3=CC([N+](=O)[O-])=CCO3)=CC=C21)C1=C(O)CC=C1C1=NC=CO1",
          "score": 0.27,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CC1=NC=NC2=CC(NC(=O)C3=CCC(O)=C3C(=O)C3=NC=NC4=CC(NC5=CC([N+](=O)[O-])=CCO5)=CC=C43)=CC=C21",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C1=NC(NNC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.26,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1576,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 25,
      "population_size": 120,
      "statistics": {
        "mean": 0.4399166666666666,
        "max": 0.69,
        "min": 0.28,
        "std": 0.11857132757215051
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(NC5=CNN=C5)=NC=C4)=C3)=NO2)=CCO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CC1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CC(C2=NNN=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(NC2=NC=CO2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "FC1=CC=CC=C1NC1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=NNCN1C1=CC=NC2=CC(C3=NC=NC4=CC(NC5=CC(N6CCCC6)=CC=N5)=CC=C43)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC([N+](=O)[O-])=CC=N3)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "OC1=CC=C(C2=CC=CC=C2NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)CC1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "FC1=C(NC2=CC=C3CC(NNC4=CC(C5=NOCC=N5)=CC=N4)CCC3=C2)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "FC1=C(NC2=NC=NC3=C4CCC(NC5=CC(C6=NOCC=N6)=CC=N5)CC4=CC=C23)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "FC1=C(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)CC2)C=CC=C1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC(N4CCCC4)=CC=N3)=C2)=NO1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "FC1=C(NC2=NC(C3=CC=NC(NC4=CCC(C5=CC=CC(N6C=CC=C6)=C5)=C4)=C3)=NO2)C=CC=C1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=NC(NC2=CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NNC1=NC=NC2=CC(NC3=C(F)C=CC=C3)=CC=C21)C1=CC=CC=C1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC([NH3+])=C3)=CC=C21",
          "score": 0.37,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "FC1=CC=CC=C1NC1=NC=NC2=CC(NC3=CCC(C4=CC(N5C=CC=C5)=CC=N4)=C3)=CC=C21",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "FNC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NC4=CCC(C5=CC(N6C=CC=C6)=CC=N5)=C4)=CC=C32)C=CC=C1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=C(N[N+](=O)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21)C1=CC=CC=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC(C3=NOC([O-])=N3)=CC=N2)=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC(C4=NOC(C5=CCO[C@H](Cl)C5)=N4)=CC=N3)=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=NC=CC(C3=NOC(NC4=CC(C5=NOC([O-])=N5)=CC=N4)=N3)=C2)=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=C(NC(=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)C2=C(C=C(Cl)C=C2)N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=NC4=C3C=CC(NC(=O)C3=CC=C(O)CC3)=C4)=CC=C21",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC(NC5=CC(C6=NOC(N7CCCC7)=N6)=CC=N5)=CC4)=C3)=NO2)=CCO1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H]([N+](=O)[O-])C2)=N1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NC4=CC=CC=C4)=CC=C32)C=CC=C1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=NC=CO2)=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC(N3CCCC3)=N2)=CC=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3OC(C4=CCCCN4)=CC3=C2)C=CC=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=C(NC1=CC(N[N+](=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)=CC1)C1=C([N+](=O)[O-])OCN=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=[N+](NC1=CC2=NC=NC([O-])=C2C=C1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "[O-]C1=NC(C2=CC=NC(NNC3=CNN=C3)=C2)=NO1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC3=C(C=C2)C(N2C=NNC2)=CC=N3)OCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "[NH3+]C1=C2C=CC(NC3=NC=NC4=CC(NC(=O)C5=CC=C([N+](=O)[O-])C5)=CC=C43)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=[N+]([O-])C1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "FC1=CC=CC=C1NC1=CC=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)N=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "[O-]NC1=C2C=CC(NC3=CC=CC=C3F)=CC2=NC=N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=[N+]([O-])C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=C(NC1=CCC(NC2=CC=C3C(=C2)N=CN=C3C2=NC=CO2)=C1)C1=CC=CC=C1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=[N+]([O-])C1=CC=C(C2=CC(NC3=NC=NC4=CC(Cl)=CC=C43)=NC=C2)N1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CCC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "FNC1=CC(NC2=NC=CC(N3CCCC3)=C2)=CC1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "[O-]C1=NC(NC2=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2)=NO1",
          "score": 0.3,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C2C(=C1)N=CN=C2N1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=C([N+](=O)[O-])CC=C1C(=O)NC1=CCOC(NC2=CC=C3C(=C2)N=CN=C3[NH3+])=C1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "O=C(NC1=CCC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=C1)NN1CCCC1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "FC[NH2+]CC1=CC2=C(C=CC(NC3=NC=NC4=CC(NC5=C(F)C=CC=C5)=CC=C43)=C2)O1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "FC1=CC=CC=C1NC1=C(N2C=CC=C2)C2=C(C=C(NC3=NC=CO3)C=C2)N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=COC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=CC2)=N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC(=O)C1=C2C=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC2=NC=N1",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=[N+](NC1=CCC(NN2CCCC2)=C1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.29,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2N1CCCC1)C1=CCC(NC2=NC=CO2)=CC1",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=C(C1=C(NC2=CC=CC=C2F)OC=CN1)C1=C([O-])CC=C1NC1=CC2=C(C=C1)C(C(=O)[N+](=O)[O-])=NC=N2",
          "score": 0.28,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1637,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 26,
      "population_size": 120,
      "statistics": {
        "mean": 0.47633333333333333,
        "max": 0.7,
        "min": 0.31,
        "std": 0.1009367238532251
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "C1=CC(C2=NOC(NC3=CC4=C(C=C3)OC(CN3CCCC3)=C4)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(NC5=CNN=C5)=NC=C4)=C3)=NO2)=CCO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "[NH3+]NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=CC=C(Cl)C4)=C3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CC1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=CC(C2=NNN=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(NC2=NC=CO2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(C2=CNN=C2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "FC1=CC=CC=C1NC1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "FC1=CC=CC=C1NC1=CC(NC2=CNN=C2)=NC=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "[O-][C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2C=C(C3=CCCCN3)OC2)=CC(N2CCCC2)=C1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=NNCN1C1=CC=NC2=CC(C3=NC=NC4=CC(NC5=CC(N6CCCC6)=CC=N5)=CC=C43)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC([N+](=O)[O-])=CC=N3)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "OC1=CC=C(C2=CC=CC=C2NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)CC1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "FC1=C(NC2=CC=C3CC(NNC4=CC(C5=NOCC=N5)=CC=N4)CCC3=C2)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "FC1=C(NC2=NC=NC3=C4CCC(NC5=CC(C6=NOCC=N6)=CC=N5)CC4=CC=C23)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NNC4=CC(C5=NOC(NNC6=CNN=C6)=N5)=CC=N4)=CC=C32)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "FC1=C(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)CC2)C=CC=C1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC(C3=CCCC3)=CC=N2)OCC1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC(N4CCCC4)=CC=N3)=C2)=NO1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "FC1=C(NC2=NC(C3=CC=NC(NC4=CCC(C5=CC=CC(N6C=CC=C6)=C5)=C4)=C3)=NO2)C=CC=C1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "C1=NC(NC2=CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=NN=C2)=C1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC=NC(NC4=C(NC5=CC6=C(C=C5)C(N5C=NNC5)=CC=N6)OCC4)=C3)=NO2)=CCO1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C1=CC=C(C2=CC(N3CCCC3)=CC=N2)C(C2=CC(NC3=NC=CO3)=NC=C2)=C1",
          "score": 0.4,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NNC1=NC=NC2=CC(NC3=C(F)C=CC=C3)=CC=C21)C1=CC=CC=C1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=CC3)=C2)=NO1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "FC1=C(NC2=CC(N3CCCC3)=CC=N2)C=CC=C1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=CC2CC(NC3=CC(C4=NOCC=N4)=CC=N3)CCC2=C1",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "FNC1=CC(NC2=NC=CC(C3=C(N4CCCC4)OC(N4CCCC4)=N3)=C2)=CC1",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC([NH3+])=C3)=CC=C21",
          "score": 0.37,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "FC1=CC=CC=C1NC1=NC=NC2=CC(NC3=CCC(C4=CC(N5C=CC=C5)=CC=N4)=C3)=CC=C21",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "FNC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NC4=CCC(C5=CC(N6C=CC=C6)=CC=N5)=C4)=CC=C32)C=CC=C1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "O=C(N[N+](=O)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21)C1=CC=CC=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=CC(C3=NOC([O-])=N3)=CC=N2)=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC(C4=NOC(C5=CCO[C@H](Cl)C5)=N4)=CC=N3)=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=[N+]([O-])C1=CCOC(NC2=NC=CC(C3=NOC(NC4=CC(C5=NOC([O-])=N5)=CC=N4)=N3)=C2)=C1",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=NOC(NNC4=CNN=C4)=N3)=CC=C21",
          "score": 0.35,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CN1C=C2CC(NC(=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)CCC2=N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC1=C(NC(=O)C2=NC=NC3=CC(NC4=CC=CC=C4F)=CC=C32)C2=C(C=C(Cl)C=C2)N1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=NC4=C3C=CC(NC(=O)C3=CC=C(O)CC3)=C4)=CC=C21",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CN(C2=NC(C3=CC=NC(NC4=CCCCC4)=C3)=NO2)C=C1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=CC2=C(C=C1NC1=C(NC3=CC(N4CCCC4)=CC=N3)CCO1)N=CC=C2N1C=NNC1",
          "score": 0.34,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=C(NC1=CC2=C(C=C1)C(N1C=CC=C1)=NC=N2)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "[NH3+]C1=NC=NC2=CC(N[N+](=O)C3=NC=NC4=CC(NC5=CC=CC=C5F)=CC=C43)=CC=C21",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC(NC5=CC(C6=NOC(N7CCCC7)=N6)=CC=N5)=CC4)=C3)=NO2)=CCO1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=NN(C)C=C1CC(=O)NC1=CC=C2C(=C1)N=CN=C2NC1=NOC(C2=CCO[C@H]([N+](=O)[O-])C2)=N1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NC4=CC=CC=C4)=CC=C32)C=CC=C1",
          "score": 0.33,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=NC=CO2)=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=NC=CO2)=NC=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2NC1=NC=CC(C2=CCNC=N2)=C1",
          "score": 0.32,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2NC1=CC=C2OC(CN3CCCC3)=CC2=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CCC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(NC1C=CC(C2=NC=CO2)=CC1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "ClC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC(N3CCCC3)=N2)=CC=N1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "FC1=C(NC2=CC=C3C(=C2)N=CN=C3NC2=CC=C3OC(C4=CCCCN4)=CC3=C2)C=CC=C1",
          "score": 0.31,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1697,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 27,
      "population_size": 120,
      "statistics": {
        "mean": 0.5144166666666666,
        "max": 0.74,
        "min": 0.36,
        "std": 0.07854718150399936
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "C1=CC(C2=NOC(NC3=CC4=C(C=C3)OC(CN3CCCC3)=C4)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(NC5=CNN=C5)=NC=C4)=C3)=NO2)=CCO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CC(C2=NOC(C3=NNCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "[NH3+]NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=CC=C(Cl)C4)=C3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC(=O)C1=C(C2=CCC([O-])=C2C2=CC=CC=C2F)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CC1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=CC(C2=NNN=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C1=CC(C2=CC3=C(C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=NOC(NNC2=C(C3=C(F)C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "[NH3+]NC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(NC2=NC=CO2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(C2=CNN=C2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.49,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "FC1=CC=CC=C1NC1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "FC1=CC=CC=C1NC1=CC(NC2=CNN=C2)=NC=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "[O-][C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2C=C(C3=CCCCN3)OC2)=CC(N2CCCC2)=C1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "C1=NNCN1C1=CC=NC2=CC(C3=NC=NC4=CC(NC5=CC(N6CCCC6)=CC=N5)=CC=C43)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC([N+](=O)[O-])=CC=N3)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "OC1=CC=C(C2=CC=CC=C2NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)CC1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "FC1=C(NC2=CC=C3CC(NNC4=CC(C5=NOCC=N5)=CC=N4)CCC3=C2)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "FC1=C(NC2=NC=NC3=C4CCC(NC5=CC(C6=NOCC=N6)=CC=N5)CC4=CC=C23)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NNC4=CC(C5=NOC(NNC6=CNN=C6)=N5)=CC=N4)=CC=C32)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "FC1=C(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)CC2)C=CC=C1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC(C3=CCCC3)=CC=N2)OCC1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "C1=CC=C(C2=CC=CC=C2C2=CC(NC3=NC=CO3)=NC=C2)C(C2=CC(NC3=CC=NN=C3)=NC=C2)=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "FC1=C(NC2=CC=C(C3=CC=NC(NC4=NC=NC5=CNCC=C54)=C3)CC2)C=CC=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "[NH3+]C1=CC=NC(NC2=CC(C3=CC=C4C(=C3)N=CN=C4[NH3+])=CC=N2)=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "FC1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC(N4CCCC4)=CC=N3)=C2)=NO1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "FC1=C(NC2=NC(C3=CC=NC(NC4=CCC(C5=CC=CC(N6C=CC=C6)=C5)=C4)=C3)=NO2)C=CC=C1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "[O-]C1=NC(NC2=CC(C3=NOC(NNC4=CNN=C4)=N3)=CC=N2)=NO1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "ClC1=CC=C(C2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=NC=C2)C=C1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "C1=CC(C2=NOCN=N2)=CC(NC2=CCCCC2)=N1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=NC(NC2=CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=NN=C2)=C1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC=NC(NC4=C(NC5=CC6=C(C=C5)C(N5C=NNC5)=CC=N6)OCC4)=C3)=NO2)=CCO1",
          "score": 0.41,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "C1=CC=C(C2=CC(N3CCCC3)=CC=N2)C(C2=CC(NC3=NC=CO3)=NC=C2)=C1",
          "score": 0.4,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "[NH3+]C1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CCCC3)=C2)=NO1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(NC1=CC=C2C(=C1)N=CN=C2NNC1=NC=NC2=CC(NC3=C(F)C=CC=C3)=CC=C21)C1=CC=CC=C1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=CC3)=C2)=NO1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "FC1=C(NC2=CC(N3CCCC3)=CC=N2)C=CC=C1",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=C(NCCNC1=NC=CO1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.39,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "O=C(NC1=NC=NC2=CC(Cl)=CC=C21)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=CC2CC(NC3=CC(C4=NOCC=N4)=CC=N3)CCC2=C1",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "FNC1=CC(NC2=NC=CC(C3=C(N4CCCC4)OC(N4CCCC4)=N3)=C2)=CC1",
          "score": 0.38,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC([NH3+])=C3)=CC=C21",
          "score": 0.37,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "FC1=CC=CC=C1NC1=NC=NC2=CC(NC3=CCC(C4=CC(N5C=CC=C5)=CC=N4)=C3)=CC=C21",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "FNC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC1",
          "score": 0.36,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1762,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 28,
      "population_size": 120,
      "statistics": {
        "mean": 0.5354166666666667,
        "max": 0.74,
        "min": 0.42,
        "std": 0.06485748264892459
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=NNC=C1NC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC1=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CC(C2=NOC(NC3=CC4=C(C=C3)OC(CN3CCCC3)=C4)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC(=O)C1=C(NC2=CC([NH3+])=CC=N2)NC2=C1C=CC(NC1=CC(C3=NOCC=N3)=CC=N1)=C2",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(NC5=CNN=C5)=NC=C4)=C3)=NO2)=CCO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CC(C2=NOC(C3=NNCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=CC(C5=CCCCN5)=CC=N4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "[NH3+]NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=CC=C(Cl)C4)=C3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC(=O)C1=C(C2=CCC([O-])=C2C2=CC=CC=C2F)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C1=CC(C2=NOC(C3=NOC(C4=NOCC=N4)=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CC1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=CC(C2=NNN=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC(C2=CC3=C(C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=NOC(NNC2=C(C3=C(F)C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "[NH3+]NC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(Cl)C1=CC=C(NCCC2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C=C1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CN=C(C2=CC(NC3=CNN=C3)=NC=C2)N=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(NC2=NC=CO2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(C2=CNN=C2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.49,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "FC1=CC=CC=C1NC1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "FC1=CC=CC=C1NC1=CC(NC2=CNN=C2)=NC=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "[O-][C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CC=C(C2=NOCC=N2)C(NC2=CC(NC3=CNN=C3)=NC=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2C=C(C3=CCCCN3)OC2)=CC(N2CCCC2)=C1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "C1=NNCN1C1=CC=NC2=CC(C3=NC=NC4=CC(NC5=CC(N6CCCC6)=CC=N5)=CC=C43)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC([N+](=O)[O-])=CC=N3)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CC2=C(C=C1C1=NC=NC3=CC(NC4=CC(N5CCCC5)=CC=N4)=CC=C31)N=CN=C2N1C=NNC1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC=CNC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "OC1=CC=C(C2=CC=CC=C2NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)CC1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "FC1=C(NC2=CC=C3CC(NNC4=CC(C5=NOCC=N5)=CC=N4)CCC3=C2)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "FC1=C(NC2=NC=NC3=C4CCC(NC5=CC(C6=NOCC=N6)=CC=N5)CC4=CC=C23)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "FC1=C(NC2=NC=NC3=CC(NNC4=CC(C5=NOC(NNC6=CNN=C6)=N5)=CC=N4)=CC=C32)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "FC1=C(NC2=NC=NC3=C2C=CC2=C3CCC(NC3=CC(C4=NOCC=N4)=CC=N3)C2)C=CC=C1",
          "score": 0.45,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "FC1=C(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)CC2)C=CC=C1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=C(NC(=O)C1=C([N+](=O)[O-])C=CC=C1)NC1=C(NC2=CC(C3=CCCC3)=CC=N2)OCC1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=C(NC3=CC=C4C(=C3)N=CN=C4[NH3+])C(C)C=C2)=C1",
          "score": 0.44,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC=C(C2=CC=CC=C2C2=CC(NC3=NC=CO3)=NC=C2)C(C2=CC(NC3=CC=NN=C3)=NC=C2)=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "FC1=C(NC2=CC=C(C3=CC=NC(NC4=NC=NC5=CNCC=C54)=C3)CC2)C=CC=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "[NH3+]C1=CC=NC(NC2=CC(C3=CC=C4C(=C3)N=CN=C4[NH3+])=CC=N2)=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "FC1=C(NC2=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N2)NC=N1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=CN=C2)=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=CC2CC(NC3=NC=CC(C4=C(NC5=CCCC5)N=CC=N4)=C3)CCC2=C1",
          "score": 0.43,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC(N4CCCC4)=CC=N3)=C2)=NO1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "FC1=C(NC2=NC(C3=CC=NC(NC4=CCC(C5=CC=CC(N6C=CC=C6)=C5)=C4)=C3)=NO2)C=CC=C1",
          "score": 0.42,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1825,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 29,
      "population_size": 120,
      "statistics": {
        "mean": 0.5535000000000001,
        "max": 0.74,
        "min": 0.46,
        "std": 0.056075098454364446
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(C5=NOC(C6=CCCC6)=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=C4N=CN=C(C5=CC(NC6=CNN=C6)=NC=C5)C4=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=NNC=C1NC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=C(F)CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(C2=CNN=C2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1=C(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4C=CC=C4)=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "FC1=C(NC2=CC(C3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CCO2)NC=N1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=CC(C2=NOC(NC3=CC4=C(C=C3)OC(CN3CCCC3)=C4)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC(=O)C1=C(NC2=CC([NH3+])=CC=N2)NC2=C1C=CC(NC1=CC(C3=NOCC=N3)=CC=N1)=C2",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=NOC(C6=C(C)O[C@H](C)C6)=N5)=C4)C=C3NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(NC5=CNN=C5)=NC=C4)=C3)=NO2)=CCO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "C1=CC(C2=NOC(C3=NNCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=CC(C5=CCCCN5)=CC=N4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "C1=CC(C2=NOC(NN3CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "[NH3+]NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=CC=C(Cl)C4)=C3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC(=O)C1=C(C2=CCC([O-])=C2C2=CC=CC=C2F)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CC(C2=NOC(C3=NOC(C4=NOCC=N4)=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CC1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=CC(C2=NNN=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C1=CC(C2=CC3=C(C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=NOC(NNC2=C(C3=C(F)C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "[NH3+]NC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "O=C(Cl)C1=CC=C(NCCC2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C=C1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C1=CN=C(C2=CC(NC3=CNN=C3)=NC=C2)N=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(F)CN3)=C1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CNN=C4)=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC1=CC=CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(NC2=NC=CO2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "Cl[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(NC2=NC=CO2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(C2=CNN=C2)CN3)=C1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CC(C2=NC=NC3=C(NC4=CC(C5=NOCC=N5)=CC=N4)CC=C23)=CC(NC2=CNN=C2)=N1",
          "score": 0.5,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.49,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "C1=CC=C(C2=CC(NC3=CC=NN=C3)=NC=C2)C(C2=CNN=C2)=C1",
          "score": 0.49,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(N[C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1)C1=CC=C([N+](=O)[O-])C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "FC1=CC=CC=C1NC1=CC=NC(NC2=CNN=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "FC1=CC=CC=C1NC1=CC(NC2=CNN=C2)=NC=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "[O-][C@@H]1CC(C2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CCO1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC=C(C2=NOCC=N2)C(NC2=CC(NC3=CNN=C3)=NC=C2)=C1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "C1=CC(C2=NC=NC3=CCCC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.48,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C1=CC2=C(C=C1NC1=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC1)N=CN=C2N1CCCC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2C=C(C3=CCCCN3)OC2)=CC(N2CCCC2)=C1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=C(C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1)C1=CC=CC1",
          "score": 0.47,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=[N+]([O-])C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "C1=NNCN1C1=CC=NC2=CC(C3=NC=NC4=CC(NC5=CC(N6CCCC6)=CC=N5)=CC=C43)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC([N+](=O)[O-])=CC=N3)=CC=C21",
          "score": 0.46,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1888,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 30,
      "population_size": 120,
      "statistics": {
        "mean": 0.5679166666666667,
        "max": 0.74,
        "min": 0.51,
        "std": 0.047677664815112555
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(C5=NOC(C6=CCCC6)=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=NOC(NNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOCC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=C4N=CN=C(C5=CC(NC6=CNN=C6)=NC=C5)C4=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(NC2=CC(C4=NOCC=N4)=CC=N2)=C3)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "C1=NNC=C1NC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC1=C(F)CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(C2=CNN=C2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=CC(C2=NC=CC(C3=NOC(C4=CC(NC5=CNN=CC5)=NC=C4)=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=C(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4C=CC=C4)=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "FC1=C(NC2=CC(C3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CCO2)NC=N1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CN2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "C1=CC(C2=NOC(NC3=CC4=C(C=C3)OC(CN3CCCC3)=C4)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC(=O)C1=C(NC2=CC([NH3+])=CC=N2)NC2=C1C=CC(NC1=CC(C3=NOCC=N3)=CC=N1)=C2",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=NOC(C6=C(C)O[C@H](C)C6)=N5)=C4)C=C3NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CC(NC2=CNN=C2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CC(C2=NC=CC(C3=NOC(C4=CCO[C@H](C5=NOC(C6=NOCC=N6)=N5)C4)=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(NC5=CNN=C5)=NC=C4)=C3)=NO2)=CCO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=CC(C2=NOC(C3=NNCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=CC(C5=CCCCN5)=CC=N4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "C1=CC(C2=NOC(NN3CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CC=NC=N5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "[O-]C1=NC(C2C=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=NO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "[NH3+]NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=CC=C(Cl)C4)=C3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC(=O)C1=C(C2=CCC([O-])=C2C2=CC=CC=C2F)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=C1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CC(C2=NOC(C3=NOC(C4=NOCC=N4)=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "C1=NNC=C1NNC1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "O=C(C1=C([N+](=O)[O-])OC=CN1)C1=C([O-])CC=C1NC1=NC(C2=CC(NC3=CNN=C3)=NC=C2)=NO1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "O=[N+](NC1=CC=C2C(=C1)N=CN=C2NC1=CC(C2=NOC([O-])=N2)=CC=N1)C1=NC=NC2=CC(NC3=CC=CC=C3F)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=NC=NC2=CC(NC3=CC(N4CCCC4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CC1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "C1=CC(C2=NNN=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=CC(C2=CC3=C(C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CNN=C2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=NOC(NNC2=C(C3=C(F)C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "[NH3+]NC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=NNCN1C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "C1=CC(N2CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(Cl)C1=CC=C(NCCC2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C=C1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "C1=CN=C(C2=CC(NC3=CNN=C3)=NC=C2)N=N1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC3=C(C=C2)C(N2C=CC=C2)=C(F)CN3)=C1",
          "score": 0.51,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 1948,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 31,
      "population_size": 120,
      "statistics": {
        "mean": 0.58375,
        "max": 0.74,
        "min": 0.52,
        "std": 0.048098206827282025
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=NC=CC(C4=CC5=C(C=C4)C(N4C=CC=C4)=CCN5)=C3)=CC=C2O1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(C5=NOC(C6=CCCC6)=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=NOC(NNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOCC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=CC(C2=CC=C(NC3=NOCC=N3)C=C2)=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4C3=CC(NC4=CNN=C4)=NC=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=C4N=CN=C(C5=CC(NC6=CNN=C6)=NC=C5)C4=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(NC2=CC(C4=NOCC=N4)=CC=N2)=C3)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C5=NOC([O-])=N5)=N4)=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "C1=NNC=C1NC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=C(F)CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(C2=CNN=C2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CC(C2=NC=CC(C3=NOC(C4=CC(NC5=CNN=CC5)=NC=C4)=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(C3=NNCC=N3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "CC1=C(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4C=CC=C4)=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "FC1=C(NC2=CC(C3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CCO2)NC=N1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CN2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC(=O)C1=C(C2=CCCN2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CC(C2=NOC(NC3=CC4=C(C=C3)OC(CN3CCCC3)=C4)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC(=O)C1=C(NC2=CC([NH3+])=CC=N2)NC2=C1C=CC(NC1=CC(C3=NOCC=N3)=CC=N1)=C2",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=NOC(C6=C(C)O[C@H](C)C6)=N5)=C4)C=C3NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=CC(NC2=CNN=C2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CC(C2=NC=CC(C3=NOC(C4=CCO[C@H](C5=NOC(C6=NOCC=N6)=N5)C4)=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=CC=C(NC3=NC=CC(C4=NONN=N4)=C3)C=C2NC1)C1=CC=CC1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CC(C2=NOC(NC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CCCCN5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=NC=CC(C4=C([N+](=O)[O-])CC=N4)=C3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(C4=CC(NC5=CNN=C5)=NC=C4)=C3)=NO2)=CCO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "C1=CC(C2=NOC(C3=NNCC=N3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=CC(C5=CCCCN5)=CC=N4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=CC(C2=NOC(NN3CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=CC=NC=N5)=C4)C=C3NC2)=N1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "[O-]C1=NC(C2C=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=NO1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "[O-]C1=C(C2=CC=CC=C2F)C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)=CNN1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC(=O)C1=C(C2=NOCC=N2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "O=C(NC1=C(F)C2=CC=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2NC1)C1=CC=CC1",
          "score": 0.53,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CNN=C3)=C2)=NO1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C1=CC(C2=NOC(NNC3=CNN=C3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.52,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2008,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 32,
      "population_size": 120,
      "statistics": {
        "mean": 0.59275,
        "max": 0.74,
        "min": 0.54,
        "std": 0.045423241114360524
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=CC(C2=CCCCN2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "FNC1=C2C=CC(NC3=CC(C4=NOC(N5C=CC=C5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=NC=CC(C4=NOC([O-])=N4)=C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=NC=CC(C4=CC5=C(C=C4)C(N4C=CC=C4)=CCN5)=C3)=CC=C2O1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=NOCC=N3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(C5=NOC(C6=CCCC6)=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=NOC(NNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOCC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=CC(C2=CC=C(NC3=NOCC=N3)C=C2)=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4C3=CC(NC4=CNN=C4)=NC=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)NNC2=CCC(NF)=C2)C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "FC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=C4N=CN=C(C5=CC(NC6=CNN=C6)=NC=C5)C4=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(NC2=CC(C4=NOCC=N4)=CC=N2)=C3)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C5=NOC([O-])=N5)=N4)=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC(=O)C1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=C4)=NO3)=C2)OC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "C1=NNC=C1NC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=C(F)CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(C2=CNN=C2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CC(C2=NC=CC(C3=NOC(C4=CC(NC5=CNN=CC5)=NC=C4)=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(C3=NNCC=N3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CC(C2=NC=CC(C3=NOCC=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC1=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=C(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4C=CC=C4)=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "FC1=C(NC2=CC(C3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CCO2)NC=N1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CN2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC(=O)C1=C(C2=CCCN2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "[O-]C1=NC(C=CNNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NC=NC=C5)=CC=N4)C=C3)NC2)=NO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(C1=C(C2=CCCN2)CNC2=C1C=CC(NC1=CC(C3=NOCC=N3)=CC=N1)=C2)N1CCCC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=C(C=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=[N+]([O-])C1=CC=C([C@@H]2CC(C3=NC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=NO3)=CCO2)C1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC(=O)C1=C(NNC2=CCC(NF)=C2)CNC2=CC(NC3=CC(C4=C([N+](=O)[O-])CC=N4)=CC=N3)=CC=C21",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2O1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "C1=CC(C2=NOC(NC3=CC4=C(C=C3)OC(CN3CCCC3)=C4)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC(=O)C1=C(NC2=CC([NH3+])=CC=N2)NC2=C1C=CC(NC1=CC(C3=NOCC=N3)=CC=N1)=C2",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=NOC(NNC2=C(N3C=CC=C3)C3=CC=C(NC4=NC=CC(C5=NOC(C6=C(C)O[C@H](C)C6)=N5)=C4)C=C3NC2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=CC(NC2=CNN=C2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "C1=CC(C2=NC=CC(C3=NOC(C4=CCO[C@H](C5=NOC(C6=NOCC=N6)=N5)C4)=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=CC=C(NC3=NC=CC(C4=NONN=N4)=C3)C=C2NC1)C1=CC=CC1",
          "score": 0.54,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2065,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 33,
      "population_size": 120,
      "statistics": {
        "mean": 0.6011666666666667,
        "max": 0.74,
        "min": 0.55,
        "std": 0.04526189223716667
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C1=CC(C2=CCCCN2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=NC(NC2=CC=NC(C3=CC(C4=NOCC=N4)=CC=N3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "FNC1=C2C=CC(NC3=CC(C4=NOC(N5C=CC=C5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=NC=CC(C4=NOC([O-])=N4)=C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=NC=CC(C4=CC5=C(C=C4)C(N4C=CC=C4)=CCN5)=C3)=CC=C2O1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=NOCC=N3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=CC=C([N+](=O)[O-])C4)ON3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(C5=NOC(C6=CCCC6)=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC1=NOC(NNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOCC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "C1=CC(C2=CC=C(NC3=NOCC=N3)C=C2)=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4C3=CC(NC4=CNN=C4)=NC=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)NNC2=CCC(NF)=C2)C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "FC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=C4N=CN=C(C5=CC(NC6=CNN=C6)=NC=C5)C4=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(NC2=CC(C4=NOCC=N4)=CC=N2)=C3)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C5=NOC([O-])=N5)=N4)=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC(=O)C1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=C4)=NO3)=C2)OC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=NNCC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "C1=CN(NC2=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC=N2)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "C1=NNC=C1NC1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=C(F)CC=C1C1=CC(NC2=CC=C3C(=C2)NCC(C2=CNN=C2)=C3N2C=CC=C2)=NC=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CC(C2=NC=CC(C3=NOC(C4=CC(NC5=CNN=CC5)=NC=C4)=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(C3=NNCC=N3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "C1=CC(C2=NC=CC(C3=NOCC=N3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1=CC=CC=C1NC1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC(NC4=CNN=C4)=NC=C3)=C2)=NO1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(NC4=CC=C5C(=C4)NCC(C4=CCCN4)=C5C(=O)N4CCCC4)=NC=C3)=CN2)=CCO1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "O=C(NC1=C(N2C=CC=C2)C2=C(C=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)NC1)C1=CC=CC1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC=NC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=C3)=NO2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC(=O)C1=C(NC(=O)C2=CC=CC2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CC=C21",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "CC1=C(C2=NC(C3=CC=NC(NC4=CC=C5C(=C4)N=CN=C5N4C=CC=C4)=C3)=NO2)C[C@@H](C)O1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "FC1=C(NC2=CC(C3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=CCO2)NC=N1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C[C@@H]1CC(C2=NC(C3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CN2)=CCO1",
          "score": 0.55,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2124,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 34,
      "population_size": 120,
      "statistics": {
        "mean": 0.61125,
        "max": 0.74,
        "min": 0.56,
        "std": 0.04730332088412681
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C1=CC(C2=CCCCN2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=NC(NC2=CC=NC(C3=CC(C4=NOCC=N4)=CC=N3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CNN=C5)=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(NC4=CC(C5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)=NC=C3)=CC=C21",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "FNC1=C2C=CC(NC3=CC(C4=NOC(N5C=CC=C5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=NC=CC(C4=NOC([O-])=N4)=C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C1=CC=C(C2=CC(NC3=CC(C4=CC(C5=NOCC=N5)=CC=N4)=NC=C3)=NC=C2)N=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=NC=CC(C4=CC5=C(C=C4)C(N4C=CC=C4)=CCN5)=C3)=CC=C2O1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=NOCC=N3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=CC=C([N+](=O)[O-])C4)ON3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4NF)=NC=C2)=NO1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC1=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=CC=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(C5=NOC(C6=CCCC6)=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC1=NOC(NNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOCC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CC(C2=CC=C(NC3=NOCC=N3)C=C2)=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4C3=CC(NC4=CNN=C4)=NC=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)NNC2=CCC(NF)=C2)C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "FC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "C1=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=CC1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=C4N=CN=C(C5=CC(NC6=CNN=C6)=NC=C5)C4=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(NC2=CC(C4=NOCC=N4)=CC=N2)=C3)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "O=C(C1=CC=CC1)C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C5=NOC([O-])=N5)=N4)=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC(=O)C1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=C4)=NO3)=C2)OC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=NNCC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "C1=CN(NC2=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC=N2)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=C(C1=CC=CC1)C1=CC(NN[N+](=O)C2=C([N+](=O)[O-])C=CC(NC3=CC(C4=NOC([O-])=N4)=CC=N3)=C2)=CC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "O=C(Cl)C1=CC=C(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "[O-]C1=NC(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=NO1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CN(C2=CC=NC3=C2C=CC(NC2=CC(C4=NOCC=N4)=CC=N2)=C3)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOC(N3CCCC3)=N2)=C1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "[NH3+]C1=C2C=CC(NC3=CC(C4=NOC(N5CCCC5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "C1=CC(NC2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOC(C(=O)C5=CC=CC=C5)=N4)=C3)=CC=C21",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "C1=CC(C2=NCCC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C1=CC(C2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=C2)=N1",
          "score": 0.56,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2182,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 35,
      "population_size": 120,
      "statistics": {
        "mean": 0.6225,
        "max": 0.81,
        "min": 0.57,
        "std": 0.04863554941261246
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC=NC(NC4=CC=C(N5CCCC5)C=C4)=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "C1=CC(C2=CNN2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(Cl)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[O-]C1=C2C=CC(NC3=CC(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=CC=N3)=CC2=NC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=CC(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=CCN1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5NC4=CC5=C(C=C4)OCC=C5)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=C(NC4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NF)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=NC=CC(C4=NOC(N5CCCC5)=N4)=C3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "C1=CC(C2=CCCCN2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=NC(NC2=CC=NC(C3=CC(C4=NOCC=N4)=CC=N3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CNN=C5)=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(NC4=CC(C5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)=NC=C3)=CC=C21",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "C1=CC2=C(C=C(C3=CC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=NC=C3)C=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "FNC1=C2C=CC(NC3=CC(C4=NOC(N5C=CC=C5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=NC=CC(C4=NOC([O-])=N4)=C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=CC=C(C2=CC(NC3=CC(C4=CC(C5=NOCC=N5)=CC=N4)=NC=C3)=NC=C2)N=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "[O-]C1=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=CC1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=C(Cl)C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(C3=CC(C4=NOCC=N4)=CC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=NC=CC(C4=CC5=C(C=C4)C(N4C=CC=C4)=CCN5)=C3)=CC=C2O1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=NOCC=N3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=CC=C([N+](=O)[O-])C4)ON3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4NF)=NC=C2)=NO1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=CC=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC4=C(C=C3)OCC=C4)=C2)=NO1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC1=CC=CC=C1NC1=NC=CC(C2=NOC([O-])=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CC=C(NC2=NC=CC(C3=CC=CC=C3C3=C(F)C=CC=C3)=C2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(C5=NOC(C6=CCCC6)=N5)=CC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC1=NOC(NNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NOCC=N4)=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CC(C2=CC=C(NC3=NOCC=N3)C=C2)=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC=C4C(=C3)N=CN=C4C3=CC(NC4=CNN=C4)=NC=C3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)NNC2=CCC(NF)=C2)C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "FC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=CC1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2C=NNC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)C=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "FC1=CC=CC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CC4=C(C=C3)C(N3C=NNC3)=NC=N4)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "FC1=C(NC2=NC(C3=CC(NC4=CNN=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=COC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "C1=CC(C2=NC=NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C32)=CC(NC2=CNN=C2)=N1",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=C4N=CN=C(C5=CC(NC6=CNN=C6)=NC=C5)C4=C3)=CC=C21",
          "score": 0.57,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2239,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 36,
      "population_size": 120,
      "statistics": {
        "mean": 0.6345833333333334,
        "max": 0.81,
        "min": 0.58,
        "std": 0.049394598782547976
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC=NC(NC4=CC=C(N5CCCC5)C=C4)=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)=C2)C=C1",
          "score": 0.78,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "C1=CC2=C(C=C(C3=CC=NC(NC4=CC=C5C(=C4)N=CCC5N4CCCC4)=C3)C=C2)OC1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "C1=CC(C2=CNN2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)C=C3)=C2)=N1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(Cl)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "[O-]C1=C2C=CC(NC3=CC(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=CC=N3)=CC2=NC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1=CC(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=CCN1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5NC4=CC5=C(C=C4)OCC=C5)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "FNC1=CC=C(NC2=CC(C3=NOCC=N3)=CC=N2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=NC=CC(C5=CC6=C(C=C5)OCC=C6)=C4)=C3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CNN=C3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=C(NC4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CCC(NC2=CNN=C2)=C1C1=CC(NC2=CC=C(C(=O)Cl)C=C2)=NC=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "FC[NH2+]CC1=C2C=CC(NC3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CC2=NC=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NF)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=NC=CC(C4=NOC(N5CCCC5)=N4)=C3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=CC=C3)=C2)=N1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(C2=CC=NC(NC4=CC5=C(C=C4)ONC=C5)=C2)=C3)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=CC(C2=CCCCN2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=NC(NC2=CC=NC(C3=CC(C4=NOCC=N4)=CC=N3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CNN=C5)=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(NC4=CC(C5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)=NC=C3)=CC=C21",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C1=CC2=C(C=C(C3=CC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=NC=C3)C=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC(C3=CC(C4=NOCC=N4)=CC=N3)=NC=C2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "C1=NC(NC2=CC=NC(C3=CCCC3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "FNC1=C2C=CC(NC3=CC(C4=NOC(N5C=CC=C5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=NC=CC(C4=NOC([O-])=N4)=C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C1=CC=C(C2=CC(NC3=CC(C4=CC(C5=NOCC=N5)=CC=N4)=NC=C3)=NC=C2)N=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "[O-]C1=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=CC1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=C(Cl)C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(C3=CC(C4=NOCC=N4)=CC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=NC=CC(C5=NN=CC=N5)=C4)=C3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "CC1=CC=CC=C1NC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=CCC1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(C2=CC=NC(NC4=CC=C5ONN=CC5=C4)=C2)=C3)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=NC=CC(C4=CC5=C(C=C4)C(N4C=CC=C4)=CCN5)=C3)=CC=C2O1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=NOCC=N3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=CC=C([N+](=O)[O-])C4)ON3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4NF)=NC=C2)=NO1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC1=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=CC=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC4=C(C=C3)OCC=C4)=C2)=NO1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "CC1=CC=CC=C1NC1=NC=CC(C2=NOC([O-])=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=CC=C(NC2=NC=CC(C3=CC=CC=C3C3=C(F)C=CC=C3)=C2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=CCC(C)N=C1C1=CC(NC2=CC=C(C(=O)Cl)C=C2)=NC=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "FC1=C2C=CC(NC3=CC(C4=CCCC4)=CC=N3)=CC2=NC=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "C1=CC(C2=NOC(C3=NOCC=N3)=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=C(O)CC3)C=C2)=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "O=[N+]([O-])C1=C([N+](=O)[O-])C=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "OC1=NC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=NO1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1=C(C2=CC(NC3=CC=C(C(=O)C4=CC=C(O)CC4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.58,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2301,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 37,
      "population_size": 120,
      "statistics": {
        "mean": 0.6459166666666666,
        "max": 0.81,
        "min": 0.59,
        "std": 0.050883786437550246
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC=NC(NC4=CC=C(N5CCCC5)C=C4)=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)=C2)C=C1",
          "score": 0.78,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CC2=C(C=C(C3=CC=NC(NC4=CC=C5C(=C4)N=CCC5N4CCCC4)=C3)C=C2)OC1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "FC1=NC(C2=CC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=NC=C2)=NON1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "C1=CC(C2=CNN2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=NC(C)=NOC4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "FC1=CC(NC2=CC=C(C3=CC(NC4=CC(C5=CCC=N5)=CC=N4)=NC=C3)C=C2)=NC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)C=C3)=C2)=N1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(F)=N4)=CC=N3)=C2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(Cl)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "[O-]C1=C2C=CC(NC3=CC(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=CC=N3)=CC2=NC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=CCN1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5NC4=CC5=C(C=C4)OCC=C5)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "FNC1=CC=C(NC2=CC(C3=NOCC=N3)=CC=N2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOC([O-])=N4)=C3)=C2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C[C@@H]1C=C(C2=C(C3=CC(NC4=CC=C(C(=O)Cl)C=C4)=NC=C3)NO2)CO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=NOCC=N4)ON3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=NC=CC(C5=CC6=C(C=C5)OCC=C6)=C4)=C3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CNN=C3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=C(NC4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=CCC(NC2=CNN=C2)=C1C1=CC(NC2=CC=C(C(=O)Cl)C=C2)=NC=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "FC[NH2+]CC1=C2C=CC(NC3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CC2=NC=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "[NH3+]C1CC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "C1=CC(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)=CCC1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NF)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=NC=CC(C4=NOC(N5CCCC5)=N4)=C3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=CC=C3)=C2)=N1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(C2=CC=NC(NC4=CC5=C(C=C4)ONC=C5)=C2)=C3)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "FC1=C(C2=CC=CC=C2C2=CC=NC(NC3=CC=C(C4=NOCC=N4)C=C3)=C2)C=CC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "C1=CC(C2=CCCCN2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=NC(NC2=CC=NC(C3=CC(C4=NOCC=N4)=CC=N3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CNN=C5)=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(NC4=CC(C5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)=NC=C3)=CC=C21",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CC2=C(C=C(C3=CC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=NC=C3)C=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC(C3=CC(C4=NOCC=N4)=CC=N3)=NC=C2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "C1=NC(NC2=CC=NC(C3=CCCC3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "FNC1=C2C=CC(NC3=CC(C4=NOC(N5C=CC=C5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=NC=CC(C4=NOC([O-])=N4)=C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CC=C(C2=CC(NC3=CC(C4=CC(C5=NOCC=N5)=CC=N4)=NC=C3)=NC=C2)N=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "[O-]C1=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=CC1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=C(Cl)C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3C2=CC(C3=CC(C4=NOCC=N4)=CC=N3)=CC=N2)=CC(C2=NOCC=N2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=NC=CC(C5=NN=CC=N5)=C4)=C3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "CC1=CC=CC=C1NC1=CC(C2=NOCC=N2)=CC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "C1=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=CCC1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(C2=CC=NC(NC4=CC=C5ONN=CC5=C4)=C2)=C3)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "FNC1=CC=C(C2=CC(NC3=CC(C4=CC(C5=CC6=C(C=C5)OCC=C6)=CC=N4)=NC=C3)=NC=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC1=CC=CC=C1NC1=NC=CC(C2=NOCC=N2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "C1=NC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=CC(C2=NOCC=N2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1=CC=C(NC2=CC(C3=CC=CC=C3C)=CC=N2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=NC=NC5=CC(Cl)=CC=C54)=NC=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=CN(C2=NC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=NO2)C=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC(C2=CCCC2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC(=O)C1=C(C2=CC(C3=NOC(N4CCCC4)=N3)=CC=N2)CNC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CCC(O)=C3)C=C2)=C1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "C1=CC(C2=CC=C(NC3=CCCC3)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(NC2=CNN=CC2)=N1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "FC[NH2+]CC1=CC2=CC(NC3=NC=CC(C4=CC5=C(C=C4)C(N4C=CC=C4)=CCN5)=C3)=CC=C2O1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=NOCC=N3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.59,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2357,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 38,
      "population_size": 120,
      "statistics": {
        "mean": 0.6574166666666665,
        "max": 0.81,
        "min": 0.6,
        "std": 0.04911713606833725
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC=NC(NC4=CC=C(N5CCCC5)C=C4)=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)=C2)C=C1",
          "score": 0.78,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CC2=C(C=C(C3=CC=NC(NC4=CC=C5C(=C4)N=CCC5N4CCCC4)=C3)C=C2)OC1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "FC1=NC(C2=CC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=NC=C2)=NON1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(N3CCCC3)C=C2)=C1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=NC(NC4=CC=C5C(=C4)N=CC(C4=NOCC=N4)C5N4CCCC4)=C3)=CC=C21",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5OCC=CC5=C4)C=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CC(C2=CNN2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=NC(C)=NOC4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "FC1=CC(NC2=CC=C(C3=CC(NC4=CC(C5=CCC=N5)=CC=N4)=NC=C3)C=C2)=NC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "ClC1=CC=C(C2=CC=C(NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C3)C=C2)C1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)C=C3)=C2)=N1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(F)=N4)=CC=N3)=C2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "C1=CC=C(NC2=CC(C3=CNN3)=CC=N2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "C1=CC2=C(CC(C3=CC(NC4=CC=C(NC5=CNN=C5)C=C4)=NC=C3)=C2)OC1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(Cl)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOCC=N4)=C3)=C2)C=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "[O-]C1=C2C=CC(NC3=CC(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=CC=N3)=CC2=NC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=CC(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=CCN1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5NC4=CC5=C(C=C4)OCC=C5)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "FNC1=CC=C(NC2=CC(C3=NOCC=N3)=CC=N2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOC([O-])=N4)=C3)=C2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C[C@@H]1C=C(C2=C(C3=CC(NC4=CC=C(C(=O)Cl)C=C4)=NC=C3)NO2)CO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=NOCC=N4)ON3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(C4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=CC4)C=C3)=C2)=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=NC=CC(C5=CC6=C(C=C5)OCC=C6)=C4)=C3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(NC5=CC(C6=NOCC=N6)=CC=N5)=N4)=CC=N3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "C1=CC(C=CNC2=CC(C3=CNN3)=CC=N2)=CC(NC2=CC=C(NC3=CNN=C3)C=C2)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CNN=C3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C2)=C3)C=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=C(NC4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=CCC(NC2=CNN=C2)=C1C1=CC(NC2=CC=C(C(=O)Cl)C=C2)=NC=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "FC[NH2+]CC1=C2C=CC(NC3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CC2=NC=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "[NH3+]C1CC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)=CCC1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(Cl)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC(C5=NOCC=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NF)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=NC=CC(C4=NOC(N5CCCC5)=N4)=C3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=CC=C3)=C2)=N1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(C2=CC=NC(NC4=CC5=C(C=C4)ONC=C5)=C2)=C3)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "FC1=C(C2=CC=CC=C2C2=CC=NC(NC3=CC=C(C4=NOCC=N4)C=C3)=C2)C=CC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "[O-]C1=CN(C2=NC=NC3=CC(NC4=CC(C5=CNN=C5)=CC=N4)=CC=C32)CN1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=CC=C(N5CCCC5)C=C4)=C3)=C2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "C1=CC(C2=CCCCN2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "C1=NC(NC2=CC=NC(C3=CC(C4=NOCC=N4)=CC=N3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC=NC(NC5=CNN=C5)=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(NC4=CC(C5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)=NC=C3)=CC=C21",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CC2=C(C=C(C3=CC(NC4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=NC=C3)C=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "C1=CC(C2=NOCC=N2)=CC(NC2=CC(C3=CC(C4=NOCC=N4)=CC=N3)=NC=C2)=N1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=NC(NC2=CC=NC(C3=CCCC3)=C2)=CC(C2=NOCC=N2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C([O-])ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=CC3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "C1=CN(C2=C(NC3=NC=CO3)CNC3=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=CC=C32)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)Cl)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "O=[N+]([O-])C1=CC=C(NC2=NC=CC(C3=NOCC=N3)=C2)C=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "FNC1=C2C=CC(NC3=CC(C4=NOC(N5C=CC=C5)=N4)=CC=N3)=CC2=NC=N1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=NC=CC(C4=NOC([O-])=N4)=C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "FNC1=NC=NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C21",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=CC=C(C2=CC(NC3=CC(C4=CC(C5=NOCC=N5)=CC=N4)=NC=C3)=NC=C2)N=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "[O-]C1=CC(C2=CC(NC3=CC=C4C(=C3)N=CN=C4N3CCCC3)=NC=C2)=CC1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=C(Cl)C3)C=C2)=C1",
          "score": 0.6,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2420,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 39,
      "population_size": 120,
      "statistics": {
        "mean": 0.66875,
        "max": 0.81,
        "min": 0.61,
        "std": 0.04536082193552787
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC=NC(NC4=CC=C(N5CCCC5)C=C4)=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)=C2)C=C1",
          "score": 0.78,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CC2=C(C=C(C3=CC=NC(NC4=CC=C5C(=C4)N=CCC5N4CCCC4)=C3)C=C2)OC1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "FC1=NC(C2=CC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=NC=C2)=NON1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(N3CCCC3)C=C2)=C1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=NC(NC4=CC=C5C(=C4)N=CC(C4=NOCC=N4)C5N4CCCC4)=C3)=CC=C21",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=N3)=NC=C2)C=C1",
          "score": 0.76,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5OCC=CC5=C4)C=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "C1=CC(C2=CNN2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=NC(C)=NOC4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "FC1=CC(NC2=CC=C(C3=CC(NC4=CC(C5=CCC=N5)=CC=N4)=NC=C3)C=C2)=NC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "FC1=CC=NC(NC2=CC=C(NC3=CC(C4=CC=C(NC5=CC(F)=CC=N5)C=C4)=CC=N3)C=C2)=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "ClC1=CC=C(C2=CC=C(NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C3)C=C2)C1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=CC(NC4=CC=C(C5=CC=C(Cl)C5)C=C4)=C3)=NC=C2)=NO1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C1=CC(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=CC=C1NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=CC=CC=C1C1=CC=C(NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)C=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "[NH3+]C1CC=NC2=C1C=CC(C1=CC=NC(NC3=CC=C(NC4=CC(C5=CC=CC5)=CC=N4)C=C3)=C1)=C2",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "ClC1=CC=C(C2=CC(NC3=CC=C(NC4=NOCC4)C=C3)=NC=C2)N1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)C=C3)=C2)=N1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(F)=N4)=CC=N3)=C2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "C1=CC=C(NC2=CC(C3=CNN3)=CC=N2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "C1=CC2=C(CC(C3=CC(NC4=CC=C(NC5=CNN=C5)C=C4)=NC=C3)=C2)OC1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C(NC5=NOCC5)C4)C=C3)=C2)=NO1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "O=C(Cl)C1C=C(C2=CC(NC3=CC=C(C4=CC(NF)=NC=C4)C=C3)=NC=C2)N=CC1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(Cl)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOCC=N4)=C3)=C2)C=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "[O-]C1=C2C=CC(NC3=CC(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=CC=N3)=CC2=NC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC1=CC(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=CCN1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5NC4=CC5=C(C=C4)OCC=C5)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "FNC1=CC=C(NC2=CC(C3=NOCC=N3)=CC=N2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOC([O-])=N4)=C3)=C2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "C[C@@H]1C=C(C2=C(C3=CC(NC4=CC=C(C(=O)Cl)C=C4)=NC=C3)NO2)CO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=NOCC=N4)ON3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(C4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=CC4)C=C3)=C2)=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=NC=CC(C5=CC6=C(C=C5)OCC=C6)=C4)=C3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(NC5=CC(C6=NOCC=N6)=CC=N5)=N4)=CC=N3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "C1=CC(C=CNC2=CC(C3=CNN3)=CC=N2)=CC(NC2=CC=C(NC3=CNN=C3)C=C2)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "CC1=CC(C2=CC(NC3=CC=C(C(=O)Cl)C=C3)=NC=C2)=NC=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(C3=CC(NC4=CNN=C4)=NC=C3)=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CNN=C3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C2)=C3)C=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC(C3=CC(NC4=CC=C(C(=O)Cl)C=C4)=NC=C3)=CC=N2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=COC2CC(C3=CC(NC4=CC5=C(C=C4)C(N4CCCC4)CC=N5)=NC=C3)CCC2=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "[O-]C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=C(NC4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CCC(NC2=CNN=C2)=C1C1=CC(NC2=CC=C(C(=O)Cl)C=C2)=NC=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "FC[NH2+]CC1=C2C=CC(NC3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CC2=NC=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "[NH3+]C1CC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CC(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)=CCC1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(Cl)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC(C5=NOCC=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C(=O)Cl)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=CC=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C2)C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3C3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CCC(C2=CC=NC(NC3=CC=C(C4=C(NC5=CC(C6=NOCC=N6)=CC=N5)NC=C4)C=C3)=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NF)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=NC=CC(C4=NOC(N5CCCC5)=N4)=C3)C=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=CC=C3)=C2)=N1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "C1=CN(C2=CCNC3=C2C=CC(C2=CC=NC(NC4=CC5=C(C=C4)ONC=C5)=C2)=C3)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "FC1=C(C2=CC=CC=C2C2=CC=NC(NC3=CC=C(C4=NOCC=N4)C=C3)=C2)C=CC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "[O-]C1=CN(C2=NC=NC3=CC(NC4=CC(C5=CNN=C5)=CC=N4)=CC=C32)CN1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=CC=C(N5CCCC5)C=C4)=C3)=C2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=CC=C2)=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(NC4=CC=C(C(=O)Cl)C=C4)C=C3)=C2)=N1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "C1=CC=C(NC2=CC(NC3=CC=C(N4CCCC4)C=C3)=NC=C2)N=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=CC(C2=CC=C(NC3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=CC1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3CC=NC4=C3C=CC(NC3=CC(C5=CC6=C(C=CCO6)C=C5)=CC=N3)=C4)=C2)=N1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CNN=C3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=CC=CC=C3F)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "C1=CC2=C(C=CC(NC3=NC(C4=CC(NC5=CNN=C5)=NC=C4)=NO3)=C2)OC1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C(C)O[C@H](C)C4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=C1",
          "score": 0.61,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2482,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 40,
      "population_size": 120,
      "statistics": {
        "mean": 0.6788333333333335,
        "max": 0.82,
        "min": 0.62,
        "std": 0.04470613927514752
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(C3=CC=NC(NC4=CC(NC5=CC=C(N6CCCC6)C=C5)=NC=C4)=C3)=C2)=N1",
          "score": 0.82,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC=NC(NC4=CC=C(N5CCCC5)C=C4)=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "C1=CC(NC2=NC=CC(C3=CNN3)=C2)=CC(NC2=CC=C(N3CCCC3)C=C2)=N1",
          "score": 0.8,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)=C2)C=C1",
          "score": 0.78,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "C1=CC2=C(C=C(C3=CC=NC(NC4=CC=C5C(=C4)N=CCC5N4CCCC4)=C3)C=C2)OC1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "FC1=NC(C2=CC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=NC=C2)=NON1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(N3CCCC3)C=C2)=C1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=NC(NC4=CC=C5C(=C4)N=CC(C4=NOCC=N4)C5N4CCCC4)=C3)=CC=C21",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=N3)=NC=C2)C=C1",
          "score": 0.76,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "C1=CC=C(C2=NOCC=N2)C(C2=CC(NC3=CC=C(N4CCCC4)C=C3)=NC=C2)=C1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5OCC=CC5=C4)C=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=CC(C2=CNN2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=NC(C)=NOC4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "[NH3+]C1CC=NC2=C1C=CC(C1=CC=NC(NC3=CC=C(NC4=NC=CC(F)=C4)C=C3)=C1)=C2",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "FC1=CC(NC2=CC=C(C3=CC(NC4=CC(C5=CCC=N5)=CC=N4)=NC=C3)C=C2)=NC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "FC1=CC=NC(NC2=CC=C(NC3=CC(C4=CC=C(NC5=CC(F)=CC=N5)C=C4)=CC=N3)C=C2)=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "ClC1=CC=C(C2=CC=C(NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C3)C=C2)C1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=CC(NC4=CC=C(C5=CC=C(Cl)C5)C=C4)=C3)=NC=C2)=NO1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "C1=CC(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=CC=C1NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "CC1=CC=CC=C1C1=CC=C(NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)C=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "[NH3+]C1CC=NC2=C1C=CC(C1=CC=NC(NC3=CC=C(NC4=CC(C5=CC=CC5)=CC=N4)C=C3)=C1)=C2",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "ClC1=CC=C(C2=CC(NC3=CC=C(NC4=NOCC4)C=C3)=NC=C2)N1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "[O-]C1=CC=C(NC2=CC(C3=CNN3)=CC=N2)C=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "CC1=NOC(C)C(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=N1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)C=C3)=C2)=N1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(F)=N4)=CC=N3)=C2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "C1=CC=C(NC2=CC(C3=CNN3)=CC=N2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "C1=CC2=C(CC(C3=CC(NC4=CC=C(NC5=CNN=C5)C=C4)=NC=C3)=C2)OC1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C(NC5=NOCC5)C4)C=C3)=C2)=NO1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "O=C(Cl)C1C=C(C2=CC(NC3=CC=C(C4=CC(NF)=NC=C4)C=C3)=NC=C2)N=CC1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "ClC1=CC=C(C2=CC=C(NC3=CC(NC4=C(NC5=CC(C6=CNN=C6)=CC=N5)CC=N4)=CC=C3)C=C2)C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(Cl)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOCC=N4)=C3)=C2)C=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "C[C@@H]1C=C(C2=C(C3=CC=C(NC4=CC(C5=CC=CC5)=CC=N4)C=C3)NO2)CO1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CON=C4)=C3)=C2)C=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=CC(NC5=CC=C6C(=C5)N=CN=C6N5CCCC5)=NC=C4)=C3)=CC=C21",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C(=O)C3=C(C4=C[C@@H](C)OC4)ON3)C=C2)=NC=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "[O-]C1=C2C=CC(NC3=CC(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)=CC=N3)=CC2=NC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "CC1=CC(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=CCN1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5NC4=CC5=C(C=C4)OCC=C5)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=CC=CC=C4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "FNC1=CC=C(NC2=CC(C3=NOCC=N3)=CC=N2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOC([O-])=N4)=C3)=C2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "C[C@@H]1C=C(C2=C(C3=CC(NC4=CC=C(C(=O)Cl)C=C4)=NC=C3)NO2)CO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(C(=O)C3=C(C4=NOCC=N4)ON3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(C4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=NO1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 76,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=CC4)C=C3)=C2)=N1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 77,
          "smiles": "CNC1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 78,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CCON3)=C2)C=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 79,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 80,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 81,
          "smiles": "O=C(C1=CC=C(NC2=NC=CC(C3=CNN3)=C2)C=C1)C1=CNN=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 82,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 83,
          "smiles": "C1=CN=C(C2=CC=NC(NC3=CC=NC(C4=NC=CC(C5=CC6=C(C=C5)OCC=C6)=C4)=C3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 84,
          "smiles": "C1=CC(C2=CC3=C(C=C2)C(N2CCCC2)=NC=N3)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 85,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(NC5=CC(C6=NOCC=N6)=CC=N5)=N4)=CC=N3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 86,
          "smiles": "C1=CC(C=CNC2=CC(C3=CNN3)=CC=N2)=CC(NC2=CC=C(NC3=CNN=C3)C=C2)=N1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 87,
          "smiles": "CC1=CC(C2=CC(NC3=CC=C(C(=O)Cl)C=C3)=NC=C2)=NC=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 88,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(C3=CC(NC4=CNN=C4)=NC=C3)=C2)=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 89,
          "smiles": "ClC1=CC=C(NC2=NC=CC(C3=CCCC3)=C2)C=C1",
          "score": 0.65,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 90,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(Cl)C=C3)=C2)=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 91,
          "smiles": "C1=CC(C2=CNN=C2)=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 92,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NF)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 93,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=CNNC4C)=CC=N3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 94,
          "smiles": "CC1=C(C2=CC=C(NC3=CC(C4=CC=CC4)=CC=N3)C=C2)C[C@@H](C)O1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 95,
          "smiles": "C1=CC2=C(C=C1NC1=CC(C3=CNN=C3)=CC=N1)N=CN=C2N1CCCC1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 96,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(C4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 97,
          "smiles": "C1=CN(C2=NC=NC3=C2C=CC(NC2=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C2)=C3)C=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 98,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC(C3=CC(NC4=CC=C(C(=O)Cl)C=C4)=NC=C3)=CC=N2)=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 99,
          "smiles": "C1=COC2CC(C3=CC(NC4=CC5=C(C=C4)C(N4CCCC4)CC=N5)=NC=C3)CCC2=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 100,
          "smiles": "[O-]C1=CC=C(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)C=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 101,
          "smiles": "FNC1C=C(C2=CC=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)C=NO1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 102,
          "smiles": "[O-]C=CNC1=CC=C(NC2=CC(C3=NOC([O-])=N3)=CC=N2)C=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 103,
          "smiles": "C1=CC=C(C2=CC=CC=C2C2=CC(NC3=CC=C(C4=NOCC=N4)C=C3)=NC=C2)C=C1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 104,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4C=CCCC4)C=C3)=C2)=N1",
          "score": 0.64,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 105,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 106,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 107,
          "smiles": "[NH3+]C1=NC=NC2=CC(NC3=NC=CC(C4=NC=CC(N5CCCC5)=C4)=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 108,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC=NC(NC3=CC=C(NC4=CC(C5=NOC([O-])=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 109,
          "smiles": "CC1=CCC(NC2=CNN=C2)=C1C1=CC(NC2=CC=C(C(=O)Cl)C=C2)=NC=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 110,
          "smiles": "FC[NH2+]CC1=C2C=CC(NC3=CC(C4=CC(NC5=CNN=C5)=NC=C4)=NC=C3)=CC2=NC=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 111,
          "smiles": "[NH3+]C1CC=NC2=CC(C3=CC(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)=NC=C3)=CC=C21",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 112,
          "smiles": "C1=CC(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)=CCC1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 113,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(Cl)C=C2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 114,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC(C5=NOCC=N5)=CC=N4)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 115,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C(=O)Cl)C=C3)=C2)=N1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 116,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=CC=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=C3)=CC=C2)C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 117,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C=CNC2=NOCC=N2)=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 118,
          "smiles": "FC1=C(C2=CCC(N3CCCC3)=C2C2=CC(NC3=CC=C(C4=NOCC=N4)C=C3)=NC=C2)C=CC=C1",
          "score": 0.63,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 119,
          "smiles": "FC1=CCC=C1NC1=CC=C2C(=C1)N=CN=C2C1=CC(NC2=CC=C3C(=C2)N=CN=C3N2CCCC2)=NC=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 120,
          "smiles": "CC(=O)C1=CC=CC1C1=CC=C(NC2=CC(C3=NC(C)=NOC3C)=CC=N2)C=C1",
          "score": 0.62,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        }
      ],
      "total_oracle_calls": 2544,
      "offspring_info": {
        "offspring_indices": [
          120,
          121,
          122,
          123,
          124,
          125,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          134,
          135,
          136,
          137,
          138,
          139,
          140,
          141,
          142,
          143,
          144,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          154,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          174,
          175,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          184,
          185,
          186,
          187,
          188,
          189
        ],
        "parent_info": {},
        "explanations": [
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)",
          "Baseline genetic operations (crossover + mutation)"
        ]
      }
    },
    {
      "generation": 41,
      "population_size": 120,
      "statistics": {
        "mean": 0.6880833333333334,
        "max": 0.83,
        "min": 0.64,
        "std": 0.04369011774862695
      },
      "molecules": [
        {
          "rank": 1,
          "smiles": "C1=CC(NC2=CC(C3=CCCC3)=CC=N2)=CC(NC2=CC=C(N3CCCC3)C=C2)=N1",
          "score": 0.83,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 2,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(C3=CC=NC(NC4=CC(NC5=CC=C(N6CCCC6)C=C5)=NC=C4)=C3)=C2)=N1",
          "score": 0.82,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 3,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC=NC(NC4=CC=C(N5CCCC5)C=C4)=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 4,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.81,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 5,
          "smiles": "C1=CC(NC2=NC=CC(C3=CNN3)=C2)=CC(NC2=CC=C(N3CCCC3)C=C2)=N1",
          "score": 0.8,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 6,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)=C2)C=C1",
          "score": 0.78,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 7,
          "smiles": "C1=CC2=C(C=C(C3=CC=NC(NC4=CC=C5C(=C4)N=CCC5N4CCCC4)=C3)C=C2)OC1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 8,
          "smiles": "FC1=NC(C2=CC(NC3=CC(NC4=CC=C(N5CCCC5)C=C4)=NC=C3)=NC=C2)=NON1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 9,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(N3CCCC3)C=C2)=C1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 10,
          "smiles": "[NH3+]C1=NC=NC2=CC(C3=CC=NC(NC4=CC=C5C(=C4)N=CC(C4=NOCC=N4)C5N4CCCC4)=C3)=CC=C21",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 11,
          "smiles": "C1=CC(NC2=CC=C(C3=NOCC=N3)C=C2)=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=C1",
          "score": 0.77,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 12,
          "smiles": "O=C(Cl)C1=CC=C(NC2=CC(C3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=N3)=NC=C2)C=C1",
          "score": 0.76,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 13,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 14,
          "smiles": "CC1=NOC([NH3+])C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 15,
          "smiles": "C1=CC=C(C2=NOCC=N2)C(C2=CC(NC3=CC=C(N4CCCC4)C=C3)=NC=C2)=C1",
          "score": 0.74,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 16,
          "smiles": "CC1=NOC(C2=CC=CC=C2F)C(C2=CC(NC3=CC=C(C4=CCC(NC5=C(F)C=CC=C5)=CC4)C=C3)=NC=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 17,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CO5)=C4)C=C3)=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 18,
          "smiles": "FC1=NC(C2=CC=NC(NC3=CC(NC4=CC=C(C5=CC(C6=NOCC=N6)=CC=N5)C=C4)=NC=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 19,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5OCC=CC5=C4)C=C3)=C2)=NO1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 20,
          "smiles": "C1=CC(C2=NC=CC(NC3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=C2)=CC(NC2=CNN=C2)=N1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 21,
          "smiles": "CC1NNC=C1C1=CC(NC2=CC=C(C3=CCC(NC4=C(F)C=CC=C4)=CC3)C=C2)=NC=C1",
          "score": 0.73,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 22,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=NC=CC(C6=CCC=N6)=C5)=C4)C=C3)=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 23,
          "smiles": "C1=CC(C2=CNN2)=CC(NC2=CC=C(NC3=NOCC3)C=C2)=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 24,
          "smiles": "CNC1=CC(C2=CC=C(NC3=CC(C4=NC(C)=NOC4C)=CC=N3)C=C2)=CC=N1",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 25,
          "smiles": "[NH3+]C1CC=NC2=C1C=CC(C1=CC=NC(NC3=CC=C(NC4=NC=CC(F)=C4)C=C3)=C1)=C2",
          "score": 0.72,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 26,
          "smiles": "FC1=C(NC2=CCC(C3=CC=C(NC4=CC(C5=NOCC=N5)=CC=N4)C=C3)=CC2)C=CC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 27,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CNN=C4)=C3)=C2)C=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 28,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCC(C5=NC(C)=NOC5[NH3+])=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 29,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=CCCCO4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 30,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=NO1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 31,
          "smiles": "FC1=CC(NC2=CC=C(C3=CC(NC4=CC(C5=CCC=N5)=CC=N4)=NC=C3)C=C2)=NC=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 32,
          "smiles": "FC1=CC=NC(NC2=CC=C(NC3=CC(C4=CC=C(NC5=CC(F)=CC=N5)C=C4)=CC=N3)C=C2)=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 33,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=NC=C3)C=C2)=C1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 34,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC=CF)=CC4)C=C3)=C2)=N1",
          "score": 0.71,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 35,
          "smiles": "CC1=NOC(C)C(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 36,
          "smiles": "C1=CC(C2=NOC(C3=CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 37,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5N4CCCC4)C=C3)=C2)=N1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 38,
          "smiles": "ClC1=CC=C(C2=CC=C(NC3=CC(NC4=CC(C5=NOCC=N5)=CC=N4)=CC=C3)C=C2)C1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 39,
          "smiles": "[O-]C1=NC(C2=CC(NC3=CC=CC(NC4=CC=C(C5=CC=C(Cl)C5)C=C4)=C3)=NC=C2)=NO1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 40,
          "smiles": "C1=CC(NC2=CC(C3=NOC(C4=CCCC4)=N3)=CC=N2)=CC=C1NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 41,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(F)=CC=N3)=C2)C=C1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 42,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=CC(C4=CCON4)=CC=N3)C=C2)=C1",
          "score": 0.7,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 43,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C5C(=C4)N=CN=C5C4=NC=CO4)C=C3)=C2)=NO1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 44,
          "smiles": "FNC1=NC=CC(C2=CC=C(NC3=NC=CC(C4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 45,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC(NC4=CC(C5=NC=CC=C5)=CC=N4)=CC=N3)C=C2)=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 46,
          "smiles": "CC1=CC=CC=C1C1=CC=C(NC2=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=CC=C2)C=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 47,
          "smiles": "[NH3+]C1CC=NC2=C1C=CC(C1=CC=NC(NC3=CC=C(NC4=CC(C5=CC=CC5)=CC=N4)C=C3)=C1)=C2",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 48,
          "smiles": "ClC1=CC=C(C2=CC(NC3=CC=C(NC4=NOCC4)C=C3)=NC=C2)N1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 49,
          "smiles": "[O-]C1=CC=C(NC2=CC(C3=CNN3)=CC=N2)C=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 50,
          "smiles": "CC1=NOC(C)C(NC2=CC=C(NC3=CC(C4=NOC([O-])=N4)=CC=N3)C=C2)=N1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 51,
          "smiles": "ClC1=C(C2=NC(C3=CC(NC4=CC=C(NC5=CC=C6OCC=CC6=C5)C=C4)=NC=C3)=NO2)C=CC=C1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 52,
          "smiles": "O=C(Cl)C1C=C(C2=CC=NC(NC3=CC=C(C4=CC=NC(NC5=CC=C(NC6=CNN=C6)C=C5)=C4)C=C3)=C2)N=CC1",
          "score": 0.69,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 53,
          "smiles": "C1=CC(NC2=CC(C3=NOCC=N3)=CC=N2)=CC(C2=CC=CC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 54,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CC5=C(C=C4)C(N4CCCC4)=NC=N5)C=C3)=C2)=N1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 55,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC(C4=NOC(F)=N4)=CC=N3)=C2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 56,
          "smiles": "C1=CC=C(NC2=CC(C3=CNN3)=CC=N2)C=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 57,
          "smiles": "C1=CC2=C(CC(C3=CC(NC4=CC=C(NC5=CNN=C5)C=C4)=NC=C3)=C2)OC1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 58,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=CC=C(NC5=NOCC5)C4)C=C3)=C2)=NO1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 59,
          "smiles": "O=C(Cl)C1C=C(C2=CC(NC3=CC=C(C4=CC(NF)=NC=C4)C=C3)=NC=C2)N=CC1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 60,
          "smiles": "ClC1=CC=C(C2=CC=C(NC3=CC(NC4=C(NC5=CC(C6=CNN=C6)=CC=N5)CC=N4)=CC=C3)C=C2)C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 61,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C([NH3+])C=C2)=C1",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 62,
          "smiles": "C1=CC(C2=CC=NC(NC3=CC(C4=NOCC=N4)=CC=N3)=C2)=CC=C1NC1=CC2=C(C=C1)C(N1CCCC1)=NC=N2",
          "score": 0.68,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 63,
          "smiles": "CC1=NOC(C)C(C2=CC=NC(NC3=CC=C(C4=CCCC=C4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 64,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(F)=C3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 65,
          "smiles": "C1=CC(C2=CC=C(NC3=CC4=C(C=C3)C(N3CCCC3)=NC=N4)C=C2)=CC(NC2=NOCC=N2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 66,
          "smiles": "CC1=NOC([NH3+])C(C2=CC=NC(NC3=CC=C(C4=CCC(NC5=C(Cl)C=CC=C5)=CC4)C=C3)=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 67,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=NC=CC(C4=NOCC=N4)=C3)=C2)C=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 68,
          "smiles": "CC1NNC=C1C1=CC=NC(NC2=CC=C(NC3=CC(C4=NOCC=N4)=CC=N3)C=C2)=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 69,
          "smiles": "C[C@@H]1C=C(C2=C(C3=CC=C(NC4=CC(C5=CC=CC5)=CC=N4)C=C3)NO2)CO1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 70,
          "smiles": "O=C(Cl)C1=CC=C(NC2=NC=CC(C3=CC=NC(NC4=CON=C4)=C3)=C2)C=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 71,
          "smiles": "C1=CC(C2=NOC(N3CCCC3)=N2)=CC(NC2=CC=C(NC3=CC=C4C(=C3)N=CN=C4C3=NC=CO3)C=C2)=N1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 72,
          "smiles": "CNC1=CC=C(NC2=CC(C3=NOCC=N3)=CC=N2)C=C1",
          "score": 0.67,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 73,
          "smiles": "C1=CCC(C2=CC(NC3=CC=C(C4=CC(NC5=CC(C6=NOCC=N6)=CC=N5)=NC=C4)C=C3)=NC=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 74,
          "smiles": "CC1=CC=CC=C1C1=CC=NC(NC2=CC=C(C3=CC=NC(NC4=NOCC=N4)=C3)C=C2)=C1",
          "score": 0.66,
          "is_offspring": false,
          "explanation": "Baseline genetic operations (crossover + mutation)"
        },
        {
          "rank": 75,
          "smiles": "[O-]C1=NC(C2=CC=NC(NC3=CC=C(NC4=NOCC4)C=C3)=C2)=NO1",
          "score": 0.66